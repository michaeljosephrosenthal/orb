{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.export.excel","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"Dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","reverse","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","merged","sorts","subtotals","functions","arguments","nnconfig","subTotal","aggregateFuncName","aggregateFunc","formatFunc","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","fieldAxeconfig","axe","rowSettings","columnSettings","dataSettings","Field","caption","customfunc","visible","collapsible","collapsed","aggregation","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","filtering","themeManager","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","setAggregateFunc","setFormatFunc","isString","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","canMoveFields","dataHeadersLocation","grandTotal","width","height","toolbar","theme","current","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","setTheme","newTheme","allFields","map","rows","columns","data","dataFieldsCount","runtimeVisibility","getField","getRowField","getColumnField","getDataField","availablefields","filter","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","fieldConfig","defaultFieldConfig","newAxeSubtotalsState","areSubtotalsVisible","splice","toggleSubtotals","axeFields","newState","toggleGrandtotal","isGrandtotalVisible","./orb.aggregation","./orb.axe","./orb.filtering","./orb.themes",5,"id","parent","value","isRoot","isLeaf","getRowIndexes","result","j",6,"uiheaders","uriHeader","docHeader","docFooter","filename","metadata","createButtonCell","buttonStyle","buttonTextColor","createButtons","buttons","cellsCountBefore","cellsCountAfter","prefix","str","reduce","tr","toBase64","btoa","unescape","encodeURIComponent","download_file","filestring","document","createElement","download","href","body","appendChild","click","removeChild","currTheme","override","themeColor","themes","themeFadeout","fadeoutColor","headerStyle","cellsHorizontalCount","layout","pivotTable","sep","rowHeaders","columnHeaders","currRow","rowStr","header","HeaderType","DATA_HEADER","hspan","vspan","metadataHeaders","col","key","hasOwnProperty","rowHeadersAndDataCells","dataRow","dataRows","dataCell","index","./orb.ui.header",7,"ALL","NONE","BLANK","operator","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",8,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","filters","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","emptyIntersection","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","b","vi","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","./orb.config",9,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",10,"states","set","state",11,"isBootstrap","currentTheme","red","blue","green","orange","flower","gray","black","white","validateTheme","themeName","trim","getPivotClasses","container","table","getButtonClasses","pivotButton","orbButton","scrollBar","getFilterClasses","getGridClasses","getDialogClasses","classes","overlay","dialog","content","title","hexToRgb","hex","exec","parseInt","g","rgbaToHex","rgba","matches","match","alpah","parseFloat","applyAlphaAndToHex","alpha","floor","substr","color",12,"axeModel","isMultiDataFields","toggleFieldExpansion","hIndex","toToggle","allExpanded","SUB_TOTAL","expanded","collapse","expand",13,"axeUi","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","infos","currparent","prevpar","grandpar","prevgrandpar","leafIndex","datafieldindex","dataHeader","getUiInfo","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.axe",14,"CellBase","template","cssclass","isvisible","getState","setState","EMPTY","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","ignoreVisibility","subSpan","tspan","addone","isRowsAxe","subheaders","subheader","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",15,"uirows","uicols","OrbReactComps","buildUi","createVisibleFunc","rowvisible","colvisible","rowsHeaders","columnsLeafHeaders","arr","rowHeadersRow","rowLeafHeader","colHeaderIndex","columnLeafHeader","renderElement","pivotComponent","Dialog","create","setProps","oldAxeType","newAxeType","changeTheme","render","element","pivotTableFactory","React","createFactory","PivotTable","pivottable","drilldown","pivotStyle","getComputedStyle","getDOMNode","show","comp","Grid","props","style","fontFamily","getPropertyValue","fontSize","./orb.ui.cols","./orb.ui.rows","./react/orb.react.compiled",16,"rowsAxe","addDataHeaders","lastInfosArray","dimension","infosMaxIndex","valIndex","subTotalHeader","newHeader","grandtotalHeader","lastrow",17,"ns","identifier","parts","split","prop","Object","prototype","apply","escapeRegex","re","replace","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify","object","InvalidCharacterError","message","chars","input","block","charCode","String","idx","output","charAt","charCodeAt","atob","bs","buffer","bc","fromCharCode",18,"getAllColumnsWidth","tblObject","node","tbl","widthArray","arrayIndex","currWidth","cellIndex","cells","currCell","__orb","_visible","cellwidth","ceil","_textWidth","_colSpan","_paddingLeft","_paddingRight","_borderLeftWidth","_borderRightWidth","cspan","_rowSpan","inhibit","size","getClassname","compProps","cell","classname","className","leftmost","topmost","ScrollEvent","scrollBarComp","raise","getScrollPercent","FilterManager","reactComp","initialFilterObject","checkboxVisible","checkbox","isVisible","parentNode","display","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","addEventListener","valueChecked","searchChanged","clearSearchButton","clearSearchBox","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","x","y","isMouseDown","resizeMouseDown","button","cursor","pageX","pageY","stopPropagation","preventDefault","resizeMouseUp","resizeMouseMove","resizeGripSize","getBoundingClientRect","outerContainerSize","valuesTableSize","outerContainerWidth","right","left","outerContainerHeight","bottom","top","offset","newContainerWidth","newContainerHeight","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","filterContainerElement","children","onOperatorChanged","newOperator","regexpActiveChanged","reactUtils","removeClass","removeEventListener","addClass","target","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","createOverlay","overlayElement","react","comps","pivotId","themeChangeCallbacks","createClass","getInitialState","DragManager","registerThemeChanged","updateClasses","moveButton","expandRow","collapseRow","compCallback","unregisterThemeChanged","thisnode","componentDidUpdate","synchronizeCompsWidths","componentDidMount","dataCellsContainerNode","refs","dataCellsContainer","dataCellsTableNode","dataCellsTable","colHeadersContainerNode","colHeadersContainer","rowHeadersContainerNode","rowHeadersContainer","horizontalScrollBar","setScrollClient","scrollPercent","scrollAmount","getSize","scrollLeft","verticalScrollBar","scrollTop","onWheel","elem","scrollbar","amount","currentTarget","deltaX","deltaY","scroll","deltaMode","pivotWrapperTable","nodes","nds","refname","colHeadersTable","rowHeadersTable","rowButtonsContainerWidth","rowButtonsContainer","dataCellsTableMaxWidthArray","dataCellsTableMaxWidth","mxwidth","rowHeadersTableWidth","rowDiff","updateTableColGroup","dataCellsContainerWidth","pivotContainer","pivotContainerHeight","dataCellsTableHeight","upperbuttonsRow","columnbuttonsRow","Toolbar","PivotTableUpperButtons","PivotTableColumnButtons","PivotTableRowButtons","PivotTableRowHeaders","PivotTableColumnHeaders","PivotTableDataCells","HorizontalScrollBar","VerticalScrollBar","tblStyle","ref","pivotTableComp","tableLayout","colSpan","padding","PivotRow","PivotCell","leftmostCellFound","layoutInfos","rowstyle","istopmost","isleftmost","ordering","toLowerCase","topMostCells","lastLeftMostCellVSpan","_borderLeft","updateCellInfos","cellContentNode","cellContent","propList","textContent","retPaddingLeft","retBorderLeft","nodeStyle","getStyle","shouldComponentUpdate","nextProps","_latestVisibleState","cellClick","divcontent","headerPushed","isWrapper","isSubtotal","onClick","dangerouslySetInnerHTML","__html","headerClassName","onDoubleClick","rowSpan","dragManager","doElementsOverlap","elem1Rect","elem2Rect","setCurrDropTarget","dropTarget","_currDropTarget","signalDragEnd","signalDragOver","setCurrDropIndicator","dropIndicator","_currDropIndicator","onDragOver","onDragEnd","_pivotComp","_currDragElement","_dragNode","_dropTargets","_dropIndicators","_initialized","pivotComp","setDragElement","prevDragElement","component","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","indicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","DropIndicator","displayName","isover","componentWillUnmount","isMounted","isFirst","isLast","dtid","DropTarget","pbid","PivotButton","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","filterButtonPos","getOffset","filterPanelFactory","FilterPanel","filterPanel","onMouseMove","onMouseDown","ctrlKey","thispos","mouseoffset","onMouseUp","isdragged","newpos","divstyle","zIndex","sortDirectionClass","filterClass","fieldAggFunc","fieldsDropTarget","fieldsButtons","dataButtons","dataDropTarget","columnButtons","rowButtons","cntrClass","headerRow","setColGroup","widths","colGroupNode","colgroup","innerHTML","dataCells","scrollBarMixin","scrollEvent","scrollClient","thumbOffset","thumbElem","scrollThumb","thumbposInParent","getParentOffset","mousePosProp","posProp","getScrollSize","sizeProp","scrollCallback","maxOffset","scrolledElement","clientSize","elementSize","scrollBarContainerSize","newSize","containerSize","mode","newOffset","thumbStyle","offsetCssProp","thisStyle","thumbClass","cssClass","mixins","filterManager","unmountComponentAtNode","onMouseWheel","valuesTable","scrollHeight","clientHeight","componentWillMount","addCheckboxRow","text","defaultChecked","Dropdown","buttonClass","currentFilter","selectedValue","onValueChanged","placeholder","clearFilter","float","openOrClose","valueNode","valueElement","valuesListNode","valuesList","onMouseEnter","backgroundPosition","onMouseLeave","selectValue","listNode","isli","tableClasses","h","statics","dialogFactory","setOverlayClass","close","dialogElement","dialogBodyElement","screenWidth","documentElement","clientWidth","innerWidth","screenHeight","innerHeight","maxHeight","dWidth","offsetWidth","offsetHeight","dHeight","_toInit","btn","createCallback","action","pgridComponent","configButtons","defaultToolbarConfig","btnConfig","refName","tooltip","excelExport","exportToExcel","expandAllRows","collapseAllRows","expandAllColumns","collapseAllColumns","updateSubtotalsButton","subTotalsState","classToAdd","classToRemove","initSubtotals","updateGrandtotalButton","initGrandtotal","../orb.axe","../orb.export.excel","../orb.filtering","../orb.ui.header","../orb.utils","./orb.react.utils",19,"list","defStop","ret","rect","rectParent","styleProps","keepString","currStyle","currentStyle","tableNode","firstChild","nodeName"],"mappings":"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","file":"orb.min.js","sourcesContent":["/**\n * orb v1.0.9, Pivot table javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.0.9\n * @link http://orbjs.net/\n * @license MIT\n */\n\n/* global module, require, define, window, document, global, React */\n/*jshint node: true, eqnull: true*/\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n            module.exports.export = _dereq_('./orb.export.excel');\n\n        }, {\n            \"./orb.export.excel\": 6,\n            \"./orb.pgrid\": 8,\n            \"./orb.query\": 9,\n            \"./orb.ui.pgridwidget\": 15,\n            \"./orb.utils\": 17\n        }],\n        2: [function(_dereq_, module, exports) {\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                var: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var Dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new Dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                parents[i].values.sort();\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new Dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 17\n        }],\n        4: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n            var themeManager = _dereq_('./orb.themes');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var merged = {\n                    configs: [],\n                    sorts: [],\n                    subtotals: [],\n                    functions: []\n                };\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    merged.configs.push(nnconfig);\n                    merged.sorts.push(nnconfig.sort || {});\n                    merged.subtotals.push(nnconfig.subTotal || {});\n                    merged.functions.push({\n                        aggregateFuncName: nnconfig.aggregateFuncName,\n                        aggregateFunc: (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: (nnconfig.formatFunc ? nnconfig.formatFunc() : null),\n                    });\n                }\n\n                return merged;\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n                var fieldAxeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = rootconfig.rowSettings;\n                            fieldAxeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = rootconfig.columnSettings;\n                            fieldAxeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = rootconfig.dataSettings;\n                            fieldAxeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            fieldAxeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                    fieldAxeconfig = null;\n                }\n\n                var merged = mergefieldconfigs(fieldconfig, fieldAxeconfig, axeconfig, defaultfieldconfig, rootconfig);\n\n                return new Field({\n                    name: getpropertyvalue('name', merged.configs, ''),\n\n                    caption: getpropertyvalue('caption', merged.configs, ''),\n\n                    sort: {\n                        order: getpropertyvalue('order', merged.sorts, null),\n                        customfunc: getpropertyvalue('customfunc', merged.sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', merged.subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', merged.subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', merged.subtotals, false) && getpropertyvalue('collapsible', merged.subtotals, true)\n                    },\n\n                    aggregateFuncName: getpropertyvalue('aggregateFuncName', merged.functions, 'sum'),\n                    aggregateFunc: getpropertyvalue('aggregateFunc', merged.functions, aggregation.sum),\n                    formatFunc: getpropertyvalue('formatFunc', merged.functions, null)\n                }, false);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order;\n                this.customfunc = options.customfunc;\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val != null ? val.toString() : '';\n                }\n                this.setAggregateFunc = function(func) {\n                    if (func)\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                }\n                this.setFormatFunc = function(func) {\n                    if (func)\n                        _formatfunc = func;\n                };\n\n                this.aggregateFunc = function(func) {\n                    return _aggregatefunc;\n                };\n\n                this.formatFunc = function(func) {\n                    return _formatfunc;\n                };\n\n                this.aggregateFuncName = options.aggregateFuncName ||\n                    (options.aggregateFunc ?\n                        (utils.isString(options.aggregateFunc) ?\n                            options.aggregateFunc :\n                            'custom') :\n                        null);\n\n                this.setAggregateFunc(options.aggregateFunc);\n                this.setFormatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.canMoveFields = config.canMoveFields !== undefined ? !!config.canMoveFields : true;\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.toolbar = config.toolbar;\n                this.theme = themeManager;\n\n                themeManager.current(config.theme);\n\n                this.rowSettings = new Field(config.rowSettings, false);\n                this.columnSettings = new Field(config.columnSettings, false);\n                this.dataSettings = new Field(config.dataSettings, false);\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.setTheme = function(newTheme) {\n                    return self.theme.current() !== self.theme.current(newTheme);\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                var runtimeVisibility = {\n                    subtotals: {\n                        rows: self.rowSettings.subTotal.visible !== undefined ? self.rowSettings.subTotal.visible : true,\n                        columns: self.columnSettings.subTotal.visible !== undefined ? self.columnSettings.subTotal.visible : true\n                    }\n                };\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                };\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var fieldConfig;\n                    var defaultFieldConfig = getfield(self.allFields, fieldname);\n\n                    if (defaultFieldConfig) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                fieldConfig = self.getRowField(fieldname);\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                fieldConfig = self.getColumnField(fieldname);\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                fieldConfig = self.getDataField(fieldname);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            var newAxeSubtotalsState = self.areSubtotalsVisible(newaxetype);\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            var field = createfield(\n                                self,\n                                newaxetype,\n                                fieldConfig,\n                                defaultFieldConfig);\n\n                            if (!newAxeSubtotalsState && field.subTotal.visible !== false) {\n                                field.subTotal.visible = null;\n                            }\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n\n                this.toggleSubtotals = function(axetype) {\n\n                    var i;\n                    var axeFields;\n                    var newState = !self.areSubtotalsVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        runtimeVisibility.subtotals.rows = newState;\n                        axeFields = self.rowFields;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        runtimeVisibility.subtotals.columns = newState;\n                        axeFields = self.columnFields;\n                    } else {\n                        return false;\n                    }\n\n                    newState = newState === false ? null : true;\n                    for (i = 0; i < axeFields.length; i++) {\n                        if (axeFields[i].subTotal.visible !== false) {\n                            axeFields[i].subTotal.visible = newState;\n                        }\n                    }\n                    return true;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return runtimeVisibility.subtotals.rows;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return runtimeVisibility.subtotals.columns;\n                    } else {\n                        return null;\n                    }\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    var newState = !self.isGrandtotalVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        self.grandTotal.rowsvisible = newState;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.grandTotal.columnsvisible = newState;\n                    } else {\n                        return false;\n                    }\n                    return true;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.grandTotal.rowsvisible;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.grandTotal.columnsvisible;\n                    } else {\n                        return false;\n                    }\n                };\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 7,\n            \"./orb.themes\": 11,\n            \"./orb.utils\": 17\n        }],\n        5: [function(_dereq_, module, exports) {\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var themeManager = _dereq_('./orb.themes');\n\n            var uriHeader = 'data:application/vnd.ms-excel;base64,';\n            var docHeader = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">' +\n                '<head>' +\n                '<meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\">' +\n                '<!--[if gte mso 9]><xml>' +\n                ' <x:ExcelWorkbook>' +\n                '  <x:ExcelWorksheets>' +\n                '   <x:ExcelWorksheet>' +\n                '    <x:Name>###sheetname###</x:Name>' +\n                '    <x:WorksheetOptions>' +\n                '     <x:ProtectContents>False</x:ProtectContents>' +\n                '     <x:ProtectObjects>False</x:ProtectObjects>' +\n                '     <x:ProtectScenarios>False</x:ProtectScenarios>' +\n                '    </x:WorksheetOptions>' +\n                '   </x:ExcelWorksheet>' +\n                '  </x:ExcelWorksheets>' +\n                '  <x:ProtectStructure>False</x:ProtectStructure>' +\n                '  <x:ProtectWindows>False</x:ProtectWindows>' +\n                ' </x:ExcelWorkbook>' +\n                '</xml><![endif]-->' +\n                '</head>' +\n                '<body>';\n            var docFooter = '</body></html>';\n\n            module.exports = function(pgridwidget, filename, metadata) {\n                metadata = metadata || {}\n                var config = pgridwidget.pgrid.config;\n\n                var currTheme = themeManager.current();\n                currTheme = currTheme === 'bootstrap' ? 'white' : currTheme;\n                var override = currTheme === 'white';\n\n                var buttonTextColor = override ? 'black' : 'white';\n                var themeColor = themeManager.themes[currTheme];\n                var themeFadeout = themeManager.utils.fadeoutColor(themeColor, 0.1);\n\n                var buttonStyle = 'style=\"font-weight: bold; color: ' + buttonTextColor + '; background-color: ' + themeColor + ';\" bgcolor=\"' + themeColor + '\"';\n                var headerStyle = 'style=\"background-color: ' + themeFadeout + ';\" bgcolor=\"' + themeFadeout + '\"';\n\n                function createButtonCell(caption) {\n                    return '<td ' + buttonStyle + '><font color=\"' + buttonTextColor + '\">' + caption + '</font></td>';\n                }\n\n                function createButtons(buttons, cellsCountBefore, cellsCountAfter, prefix) {\n                    var i;\n                    var str = prefix || '<tr>';\n                    for (i = 0; i < cellsCountBefore; i++) {\n                        str += '<td></td>';\n                    }\n\n                    str += buttons.reduce(function(tr, field) {\n                        return (tr += createButtonCell(field.caption));\n                    }, '');\n\n                    for (i = 0; i < cellsCountAfter; i++) {\n                        str += '<td></td>';\n                    }\n                    return str + '</tr>';\n                }\n\n                var cellsHorizontalCount = Math.max(config.dataFields.length + 1, pgridwidget.layout.pivotTable.width);\n\n                var dataFields = createButtons(config.dataFields,\n                    0,\n                    cellsHorizontalCount - config.dataFields.length,\n                    '<tr><td><font color=\"#ccc\">Data</font></td>'\n                );\n\n                var sep = '<tr><td style=\"height: 22px;\" colspan=\"' + cellsHorizontalCount + '\"></td></tr>';\n\n                var columnFields = createButtons(config.columnFields,\n                    pgridwidget.layout.rowHeaders.width,\n                    cellsHorizontalCount - (pgridwidget.layout.rowHeaders.width + config.columnFields.length)\n                );\n\n                var columnHeaders = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.columns.headers.length; i++) {\n                        var currRow = pgridwidget.columns.headers[i];\n                        var rowStr = '<tr>';\n                        if (i < pgridwidget.columns.headers.length - 1) {\n                            for (j = 0; j < pgridwidget.layout.rowHeaders.width; j++) {\n                                rowStr += '<td></td>';\n                            }\n                        } else {\n                            rowStr += config.rowFields.reduce(function(tr, field) {\n                                return (tr += createButtonCell(field.caption));\n                            }, '');\n                        }\n\n                        rowStr += currRow.reduce(function(tr, header) {\n                            var value = header.type === uiheaders.HeaderType.DATA_HEADER ? header.value.caption : header.value;\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n                var metadataHeaders = (function() {\n                    var rowStr = '';\n                    var col = 1;\n                    for (var key in metadata) {\n                        if (metadata.hasOwnProperty(key)) {\n                            rowStr += '<tr><td><b>' + key + '</b></td>';\n                            rowStr += '<td>' + metadata[key] + '</td></tr>';\n                            col++;\n                        }\n                    }\n                    rowStr += '</tr>';\n                    return rowStr;\n                }());\n\n                var rowHeadersAndDataCells = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.rows.headers.length; i++) {\n                        var currRow = pgridwidget.rows.headers[i];\n                        var rowStr = '<tr>';\n                        rowStr += currRow.reduce(function(tr, header) {\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + header.value + '</td>');\n                        }, '');\n                        var dataRow = pgridwidget.dataRows[i];\n                        rowStr += dataRow.reduce(function(tr, dataCell, index) {\n                            var formatFunc = config.dataFields[index = index % config.dataFields.length].formatFunc;\n                            var value = dataCell.value == null ? '' : formatFunc ? formatFunc()(dataCell.value) : dataCell.value;\n                            return (tr += '<td>' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                function toBase64(str) {\n                    return utils.btoa(unescape(encodeURIComponent(str)));\n                }\n\n                function download_file(filename, filestring) {\n                    var a = document.createElement('a');\n                    a.download = filename + '.xls';\n                    a.href = filestring;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                }\n\n                var filestring = uriHeader + toBase64(\n                    docHeader +\n                    '<table>' +\n                    dataFields +\n                    sep +\n                    metadataHeaders +\n                    columnFields +\n                    columnHeaders +\n                    rowHeadersAndDataCells +\n                    '</table>' +\n                    docFooter\n                );\n                return filename ?\n                    download_file(filename, filestring) :\n                    filestring;\n            };\n\n        }, {\n            \"./orb.themes\": 11,\n            \"./orb.ui.header\": 14,\n            \"./orb.utils\": 17\n        }],\n        7: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                };\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Matches',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 17\n        }],\n        8: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    values.containsBlank = containsBlank;\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                };\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                };\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n                    var value;\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            value = self.calcAggregation(\n                                rowdim.isRoot ? null : rowdim.getRowIndexes().slice(0),\n                                coldim.isRoot ? null : coldim.getRowIndexes().slice(0), [datafieldName],\n                                aggregateFunc)[datafieldName];\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                value = self.dataMatrix[rowdim.id][coldim.id][datafieldName];\n                            } else {\n                                value = null;\n                            }\n                        }\n                    }\n\n                    return value === undefined ? null : value;\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                };\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var emptyIntersection = intersection && intersection.length === 0;\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc();\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            // no data\n                            if (emptyIntersection) {\n                                res[datafield.field.name] = null;\n                            } else {\n                                res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                            }\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 7,\n            \"./orb.query\": 9,\n            \"./orb.utils\": 17\n        }],\n        9: [function(_dereq_, module, exports) {\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                };\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 17\n        }],\n        10: [function(_dereq_, module, exports) {\n\n\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        11: [function(_dereq_, module, exports) {\n\n            module.exports = (function() {\n\n                var currentTheme = 'blue';\n                var themeManager = {};\n\n                function isBootstrap() {\n                    return currentTheme === 'bootstrap';\n                }\n\n                themeManager.themes = {\n                    red: '#C72C48',\n                    blue: '#5bc0de',\n                    green: '#3fb618',\n                    orange: '#df691a',\n                    flower: '#A74AC7',\n                    gray: '#808080',\n                    black: '#000000',\n                    white: '#FFFFFF'\n                };\n\n                themeManager.current = function(newTheme) {\n                    if (newTheme) {\n                        currentTheme = themeManager.validateTheme(newTheme);\n                    }\n\n                    return currentTheme;\n                };\n\n                themeManager.validateTheme = function(themeName) {\n                    themeName = (themeName || '').toString().trim();\n                    if (!themeManager.themes[themeName] && themeName !== 'bootstrap') {\n                        return 'blue';\n                    } else {\n                        return themeName;\n                    }\n                };\n\n                themeManager.getPivotClasses = function() {\n                    return {\n                        container: 'orb-container orb-' + currentTheme,\n                        table: 'orb' + (isBootstrap() ? ' table' : '')\n                    };\n                };\n\n                themeManager.getButtonClasses = function() {\n                    return {\n                        pivotButton: 'fld-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        orbButton: 'orb-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        scrollBar: isBootstrap() ? ' btn btn-default btn-xs' : ''\n                    };\n                };\n\n                themeManager.getFilterClasses = function() {\n                    return {\n                        container: 'orb-' + currentTheme + ' orb fltr-cntnr'\n                    };\n                };\n\n                themeManager.getGridClasses = function() {\n                    return {\n                        table: isBootstrap() ? 'table table-condensed' : 'orb-table'\n                    };\n                };\n\n                themeManager.getDialogClasses = function(visible) {\n                    var classes = {\n                        overlay: 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') + ' orb-' + currentTheme,\n                        dialog: 'orb-dialog',\n                        content: '',\n                        header: 'orb-dialog-header',\n                        title: '',\n                        body: 'orb-dialog-body'\n                    };\n\n                    if (isBootstrap()) {\n                        classes.overlay += ' modal';\n                        classes.dialog += ' modal-dialog';\n                        classes.content = 'modal-content';\n                        classes.header += ' modal-header';\n                        classes.title = 'modal-title';\n                        classes.body += ' modal-body';\n                    }\n                    return classes;\n                };\n\n                var utils = themeManager.utils = {\n                    hexToRgb: function(hex) {\n                        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n                        return result ? {\n                            r: parseInt(result[1], 16),\n                            g: parseInt(result[2], 16),\n                            b: parseInt(result[3], 16)\n                        } : null;\n                    },\n                    rgbaToHex: function(rgba) {\n                        var matches = rgba.match(/rgba\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)/);\n                        if (matches) {\n                            var alpah = parseFloat(matches[4]);\n                            return '#' +\n                                utils.applyAlphaAndToHex(matches[1], alpah) +\n                                utils.applyAlphaAndToHex(matches[2], alpah) +\n                                utils.applyAlphaAndToHex(matches[3], alpah);\n                        }\n                        return null;\n                    },\n                    applyAlphaAndToHex: function(value, alpha) {\n                        return (Math.floor(alpha * parseInt(value) + (1 - alpha) * 255) + 256).toString(16).substr(1, 2);\n                    },\n                    fadeoutColor: function(color, alpha) {\n                        color = utils.hexToRgb(color);\n                        return '#' +\n                            utils.applyAlphaAndToHex(color.r, alpha) +\n                            utils.applyAlphaAndToHex(color.g, alpha) +\n                            utils.applyAlphaAndToHex(color.b, alpha);\n                    }\n                };\n\n                return themeManager;\n            }());\n\n        }, {}],\n        12: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(axeModel) {\n\n                var self = this;\n\n\n                this.axe = axeModel;\n\n\n                this.headers = [];\n\n                this.dataFieldsCount = function() {\n                    return (self.axe.pgrid.config.dataHeadersLocation === 'columns' && self.axe.type === axe.Type.COLUMNS) ||\n                        (self.axe.pgrid.config.dataHeadersLocation === 'rows' && self.axe.type === axe.Type.ROWS) ?\n                        self.axe.pgrid.config.dataFieldsCount :\n                        1;\n                };\n\n                this.isMultiDataFields = function() {\n                    return self.dataFieldsCount() > 1;\n                };\n\n                this.toggleFieldExpansion = function(field, newState) {\n                    var toToggle = [];\n                    var allExpanded = true;\n                    var hIndex;\n\n                    for (var i = 0; i < this.headers.length; i++) {\n                        for (hIndex = 0; hIndex < this.headers[i].length; hIndex++) {\n                            var header = this.headers[i][hIndex];\n                            if (header.type === uiheaders.HeaderType.SUB_TOTAL && (field == null || header.dim.field.name == field.name)) {\n                                toToggle.push(header);\n                                allExpanded = allExpanded && header.expanded;\n                            }\n                        }\n                    }\n\n                    if (newState !== undefined) {\n                        allExpanded = !newState;\n                    }\n\n                    if (toToggle.length > 0) {\n                        for (hIndex = 0; hIndex < toToggle.length; hIndex++) {\n                            if (allExpanded) {\n                                toToggle[hIndex].collapse();\n                            } else {\n                                toToggle[hIndex].expand();\n                            }\n                        }\n                        return true;\n                    }\n\n                    return false;\n                };\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 14\n        }],\n        13: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, columnsAxe);\n\n                this.leafsHeaders = null;\n\n                this.build = function() {\n                    self.headers = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                                self.headers.push([]);\n                                getUiInfo(depth, self.headers);\n                            }\n\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                                // add grandtotal header\n                                (self.headers[0] = self.headers[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount()));\n                            }\n                        }\n\n                        if (self.headers.length === 0) {\n                            self.headers.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.headers.length > 0) {\n                        // last headers row\n                        var infos = self.headers[self.headers.length - 1];\n                        var header = infos[0];\n\n                        if (header) {\n                            var currparent,\n                                prevpar = header.parent;\n\n                            for (var i = 0; i < infos.length; i++) {\n                                header = infos[i];\n                                currparent = header.parent;\n                                // if current header parent is different than previous header parent,\n                                // add previous parent\n                                if (currparent != prevpar) {\n                                    pushsubtotal(prevpar);\n                                    if (currparent != null) {\n                                        // walk up parent hierarchy and add grand parents if different \n                                        // than current header grand parents\n                                        var grandpar = currparent.parent;\n                                        var prevgrandpar = prevpar ? prevpar.parent : null;\n                                        while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                            pushsubtotal(prevgrandpar);\n                                            grandpar = grandpar ? grandpar.parent : null;\n                                            prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                        }\n                                    }\n                                    // update previous parent variable\n                                    prevpar = currparent;\n                                }\n                                // push current header\n                                leafsHeaders.push(infos[i]);\n\n                                // if it's the last header, add all of its parents up to the top\n                                if (i === infos.length - 1) {\n                                    while (prevpar != null) {\n                                        pushsubtotal(prevpar);\n                                        prevpar = prevpar.parent;\n                                    }\n                                }\n                            }\n                            // grandtotal is visible for columns and if there is more than one dimension in this axe\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                                // push also grand total header\n                                leafsHeaders.push(self.headers[0][self.headers[0].length - 1]);\n                            }\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (self.isMultiDataFields()) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.headers.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, headers) {\n\n                    var infos = headers[headers.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        headers[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, self.dataFieldsCount(), subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        14: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'))();\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = '';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan(ignoreVisibility) {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (isRowsAxe || ignoreVisibility || self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            if (self.subheaders.length > 0) {\n                                for (var i = 0; i < self.subheaders.length; i++) {\n                                    var subheader = self.subheaders[i];\n                                    // if its not an array\n                                    if (!subheader.dim.isLeaf) {\n                                        subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                        tspan += subSpan;\n                                        if (i === 0 && (subSpan === 0)) {\n                                            addone = true;\n                                        }\n                                    } else {\n                                        tspan += datafieldscount;\n                                    }\n                                }\n                            } else {\n                                tspan += datafieldscount;\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    },\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 10\n        }],\n        15: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            //var React = require('react');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n                var pivotComponent;\n                var dialog = OrbReactComps.Dialog.create();\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.dataRows = [];\n\n                this.layout = {\n                    rowHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    columnHeaders: {\n\n                        width: null,\n\n                        height: null,\n                    },\n                    pivotTable: {\n\n                        width: null,\n\n                        height: null\n                    }\n                };\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.setProps({});\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    if (self.pgrid.moveField(field, oldAxeType, newAxeType, position)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.toggleFieldExpansion = function(axetype, field, newState) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.rows.toggleFieldExpansion(field, newState);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.columns.toggleFieldExpansion(field, newState);\n                    }\n                    return false;\n                };\n\n                this.toggleSubtotals = function(axetype) {\n                    if (self.pgrid.config.toggleSubtotals(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    return self.pgrid.config.areSubtotalsVisible(axetype);\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    if (self.pgrid.config.toggleGrandtotal(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    return self.pgrid.config.isGrandtotalVisible(axetype);\n                };\n\n                this.changeTheme = function(newTheme) {\n                    pivotComponent.changeTheme(newTheme);\n                };\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            pgridwidget: self\n                        });\n\n                        pivotComponent = React.render(pivottable, element);\n                    }\n                };\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        var pivotStyle = window.getComputedStyle(pivotComponent.getDOMNode(), null);\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: {\n                                fontFamily: pivotStyle.getPropertyValue('font-family'),\n                                fontSize: pivotStyle.getPropertyValue('font-size')\n                            }\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build row and column headers\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsHeaders = self.rows.headers;\n                    var columnsLeafHeaders = self.columns.leafsHeaders;\n\n                    // set control layout infos\t\t\n                    self.layout = {\n                        rowHeaders: {\n                            width: (self.pgrid.rows.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0),\n                            height: rowsHeaders.length\n                        },\n                        columnHeaders: {\n                            width: self.columns.leafsHeaders.length,\n                            height: (self.pgrid.columns.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0)\n                        }\n                    };\n\n                    self.layout.pivotTable = {\n                        width: self.layout.rowHeaders.width + self.layout.columnHeaders.width,\n                        height: self.layout.rowHeaders.height + self.layout.columnHeaders.height\n                    };\n\n                    var dataRows = [];\n                    var arr;\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n                    if (rowsHeaders.length > 0) {\n                        for (var ri = 0; ri < rowsHeaders.length; ri++) {\n                            var rowHeadersRow = rowsHeaders[ri];\n                            var rowLeafHeader = rowHeadersRow[rowHeadersRow.length - 1];\n\n                            arr = [];\n                            for (var colHeaderIndex = 0; colHeaderIndex < columnsLeafHeaders.length; colHeaderIndex++) {\n                                var columnLeafHeader = columnsLeafHeaders[colHeaderIndex];\n                                var isvisible = createVisibleFunc(rowLeafHeader.visible, columnLeafHeader.visible);\n                                arr[colHeaderIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rowLeafHeader, columnLeafHeader);\n                            }\n                            dataRows.push(arr);\n                        }\n                    }\n                    self.dataRows = dataRows;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 8,\n            \"./orb.ui.cols\": 13,\n            \"./orb.ui.header\": 14,\n            \"./orb.ui.rows\": 16,\n            \"./react/orb.react.compiled\": 18\n        }],\n        16: [function(_dereq_, module, exports) {\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, rowsAxe);\n\n                this.build = function() {\n                    var headers = [];\n                    var grandtotalHeader;\n\n                    if (self.axe != null) {\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            headers.push([]);\n\n                            // Fill Rows layout infos\n                            getUiInfo(headers, self.axe.root);\n\n                            if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                                var lastrow = headers[headers.length - 1];\n                                grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount());\n                                if (lastrow.length === 0) {\n                                    lastrow.push(grandtotalHeader);\n                                } else {\n                                    headers.push([grandtotalHeader]);\n                                }\n                            }\n                        }\n\n                        if (headers.length === 0) {\n                            headers.push([grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        if (grandtotalHeader) {\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(headers, grandtotalHeader);\n                        }\n                    }\n                    self.headers = headers;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (self.isMultiDataFields()) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < self.dataFieldsCount() - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, self.dataFieldsCount(), subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        17: [function(_dereq_, module, exports) {\n            (function(global) {\n\n                module.exports = {\n\n                    ns: function(identifier, parent) {\n                        var parts = identifier.split('.');\n                        var i = 0;\n                        parent = parent || window;\n                        while (i < parts.length) {\n                            parent[parts[i]] = parent[parts[i]] || {};\n                            parent = parent[parts[i]];\n                            i++;\n                        }\n                        return parent;\n                    },\n\n                    ownProperties: function(obj) {\n                        var arr = [];\n                        for (var prop in obj) {\n                            if (obj.hasOwnProperty(prop)) {\n                                arr.push(prop);\n                            }\n                        }\n                        return arr;\n                    },\n\n                    isArray: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Array]';\n                    },\n\n                    isNumber: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Number]';\n                    },\n\n                    isDate: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Date]';\n                    },\n\n                    isString: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object String]';\n                    },\n\n                    isRegExp: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                    },\n\n                    escapeRegex: function(re) {\n                        return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                    },\n\n                    findInArray: function(array, predicate) {\n                        if (this.isArray(array) && predicate) {\n                            for (var i = 0; i < array.length; i++) {\n                                var item = array[i];\n                                if (predicate(item)) {\n                                    return item;\n                                }\n                            }\n                        }\n                        return undefined;\n                    },\n\n                    jsonStringify: function(obj, censorKeywords) {\n                        function censor(key, value) {\n                            return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                        }\n                        return JSON.stringify(obj, censor, 2);\n                    }\n                };\n\n                // from: https://github.com/davidchambers/Base64.js\n\n                (function(object) {\n                    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n                    function InvalidCharacterError(message) {\n                        this.message = message;\n                    }\n                    InvalidCharacterError.prototype = new Error();\n                    InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n                    // encoder\n                    // [https://gist.github.com/999166] by [https://github.com/nignag]\n                    object.btoa = global && global.btoa ? function(str) {\n                            return global.btoa(str);\n                        } :\n                        function(input) {\n                            var str = String(input);\n                            for (\n                                // initialize result and counter\n                                var block, charCode, idx = 0, map = chars, output = '';\n                                // if the next str index does not exist:\n                                // change the mapping table to \"=\"\n                                // check if d has no fractional digits\n                                str.charAt(idx | 0) || (map = '=', idx % 1);\n                                // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n                                output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n                            ) {\n                                charCode = str.charCodeAt(idx += 3 / 4);\n                                if (charCode > 0xFF) {\n                                    throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n                                }\n                                block = block << 8 | charCode;\n                            }\n                            return output;\n                        };\n\n                    // decoder\n                    // [https://gist.github.com/1020396] by [https://github.com/atk]\n                    object.atob = global && global.atob ? function(str) {\n                            return global.atob(str);\n                        } :\n                        function(input) {\n                            var str = String(input).replace(/=+$/, '');\n                            if (str.length % 4 == 1) {\n                                throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n                            }\n                            for (\n                                // initialize result and counters\n                                var bc = 0, bs, buffer, idx = 0, output = '';\n                                // get next character\n                                (buffer = str.charAt(idx++));\n                                // character found in table? initialize bit storage and add its ascii value;\n                                ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n                                    // and if not first of each 4 characters,\n                                    // convert the first 8 bits to one ascii character\n                                    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n                            ) {\n                                // try to find character in table (0-63, not found => -1)\n                                buffer = chars.indexOf(buffer);\n                            }\n                            return output;\n                        };\n                }(module.exports));\n\n            }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n        }, {}],\n        18: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n            var reactUtils = _dereq_('./orb.react.utils');\n\n            var extraCol = 0;\n            var comps = module.exports;\n\n            var pivotId = 1;\n            var themeChangeCallbacks = {};\n\n            module.exports.PivotTable = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                getInitialState: function() {\n                    comps.DragManager.init(this);\n\n                    themeChangeCallbacks[this.id] = [];\n                    this.registerThemeChanged(this.updateClasses);\n\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps({});\n                },\n                moveButton: function(button, newAxeType, position) {\n                    if (this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position)) {\n                        this.setProps({});\n                    }\n                },\n                toggleFieldExpansion: function(axetype, field, newState) {\n                    if (this.pgridwidget.toggleFieldExpansion(axetype, field, newState)) {\n                        this.setProps({});\n                    }\n                },\n                toggleSubtotals: function(axetype) {\n                    if (this.pgridwidget.toggleSubtotals(axetype)) {\n                        this.setProps({});\n                    }\n                },\n                toggleGrandtotal: function(axetype) {\n                    if (this.pgridwidget.toggleGrandtotal(axetype)) {\n                        this.setProps({});\n                    }\n                },\n                expandRow: function(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                applyFilter: function(fieldname, operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    this.setProps({});\n                },\n                registerThemeChanged: function(compCallback) {\n                    if (compCallback) {\n                        themeChangeCallbacks[this.id].push(compCallback);\n                    }\n                },\n                unregisterThemeChanged: function(compCallback) {\n                    var i;\n                    if (compCallback && (i = themeChangeCallbacks[this.id].indexOf(compCallback)) >= 0) {\n                        themeChangeCallbacks[this.id].splice(i, 1);\n                    }\n                },\n                changeTheme: function(newTheme) {\n                    if (this.pgridwidget.pgrid.config.setTheme(newTheme)) {\n                        // notify self/sub-components of the theme change\n                        for (var i = 0; i < themeChangeCallbacks[this.id].length; i++) {\n                            themeChangeCallbacks[this.id][i]();\n                        }\n                    }\n                },\n                updateClasses: function() {\n                    var thisnode = this.getDOMNode();\n                    var classes = this.pgridwidget.pgrid.config.theme.getPivotClasses();\n                    thisnode.className = classes.container;\n                    thisnode.children[1].className = classes.table;\n                },\n                componentDidUpdate: function() {\n                    this.synchronizeCompsWidths();\n                },\n                componentDidMount: function() {\n                    var dataCellsContainerNode = this.refs.dataCellsContainer.getDOMNode();\n                    var dataCellsTableNode = this.refs.dataCellsTable.getDOMNode();\n                    var colHeadersContainerNode = this.refs.colHeadersContainer.getDOMNode();\n                    var rowHeadersContainerNode = this.refs.rowHeadersContainer.getDOMNode();\n\n                    this.refs.horizontalScrollBar.setScrollClient(dataCellsContainerNode, function(scrollPercent) {\n                        var scrollAmount = Math.ceil(\n                            scrollPercent * (\n                                reactUtils.getSize(dataCellsTableNode).width -\n                                reactUtils.getSize(dataCellsContainerNode).width\n                            )\n                        );\n                        colHeadersContainerNode.scrollLeft = scrollAmount;\n                        dataCellsContainerNode.scrollLeft = scrollAmount;\n                    });\n\n                    this.refs.verticalScrollBar.setScrollClient(dataCellsContainerNode, function(scrollPercent) {\n                        var scrollAmount = Math.ceil(\n                            scrollPercent * (\n                                reactUtils.getSize(dataCellsTableNode).height -\n                                reactUtils.getSize(dataCellsContainerNode).height\n                            )\n                        );\n                        rowHeadersContainerNode.scrollTop = scrollAmount;\n                        dataCellsContainerNode.scrollTop = scrollAmount;\n                    });\n\n                    this.synchronizeCompsWidths();\n                },\n                onWheel: function(e) {\n                    var elem;\n                    var scrollbar;\n                    var amount;\n                    if (e.currentTarget == (elem = this.refs.colHeadersContainer.getDOMNode())) {\n                        scrollbar = this.refs.horizontalScrollBar;\n                        amount = e.deltaX || e.deltaY;\n                    } else if ((e.currentTarget == (elem = this.refs.rowHeadersContainer.getDOMNode()))\n\n                    ) {\n                        scrollbar = this.refs.verticalScrollBar;\n                        amount = e.deltaY;\n                    } else if (e.currentTarget == (elem = this.refs.dataCellsContainer.getDOMNode())) {\n                        if (e.deltaX && this.refs.horizontalScrollBar.scroll(e.deltaX, e.deltaMode)) {\n                            e.stopPropagation();\n                            e.preventDefault();\n                        }\n                        scrollbar = this.refs.verticalScrollBar;\n                        amount = e.deltaY;\n                    }\n\n                    if (scrollbar && scrollbar.scroll(amount, e.deltaMode)) {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }\n                },\n                synchronizeCompsWidths: function() {\n                    var self = this;\n\n                    var pivotWrapperTable = self.refs.pivotWrapperTable.getDOMNode();\n\n                    var nodes = (function() {\n                        var nds = {};\n                        ['pivotContainer', 'dataCellsContainer', 'dataCellsTable', 'upperbuttonsRow', 'columnbuttonsRow',\n\n                            'colHeadersContainer', 'rowHeadersContainer', 'rowButtonsContainer',\n                            'toolbar', 'horizontalScrollBar', 'verticalScrollBar'\n                        ].forEach(function(refname) {\n                            if (self.refs[refname]) {\n                                nds[refname] = {\n                                    node: self.refs[refname].getDOMNode()\n                                };\n                                nds[refname].size = reactUtils.getSize(nds[refname].node);\n                            }\n                        });\n                        return nds;\n                    }());\n\n                    // colHeadersTable\n                    nodes.colHeadersTable = {\n                        node: nodes.colHeadersContainer.node.children[0]\n                    };\n                    nodes.colHeadersTable.size = reactUtils.getSize(nodes.colHeadersTable.node);\n\n                    // rowHeadersTable\n                    nodes.rowHeadersTable = {\n                        node: nodes.rowHeadersContainer.node.children[0]\n                    };\n                    nodes.rowHeadersTable.size = reactUtils.getSize(nodes.rowHeadersTable.node);\n\n                    // get row buttons container width\n                    var rowButtonsContainerWidth = reactUtils.getSize(nodes.rowButtonsContainer.node.children[0]).width;\n\n                    // get array of dataCellsTable column widths\n                    getAllColumnsWidth(nodes.dataCellsTable);\n                    // get array of colHeadersTable column widths\n                    getAllColumnsWidth(nodes.colHeadersTable);\n                    // get array of rowHeadersTable column widths\n                    getAllColumnsWidth(nodes.rowHeadersTable);\n\n                    // get the array of max widths between dataCellsTable and colHeadersTable\n                    var dataCellsTableMaxWidthArray = [];\n                    var dataCellsTableMaxWidth = 0;\n\n                    for (var i = 0; i < nodes.dataCellsTable.widthArray.length; i++) {\n                        var mxwidth = Math.max(nodes.dataCellsTable.widthArray[i], nodes.colHeadersTable.widthArray[i]);\n                        dataCellsTableMaxWidthArray.push(mxwidth);\n                        dataCellsTableMaxWidth += mxwidth;\n                    }\n\n                    var rowHeadersTableWidth = Math.max(nodes.rowHeadersTable.size.width, rowButtonsContainerWidth, 67);\n                    var rowDiff = rowHeadersTableWidth - nodes.rowHeadersTable.size.width;\n                    if (rowDiff > 0) {\n                        nodes.rowHeadersTable.size.width += rowDiff;\n                        nodes.rowHeadersTable.widthArray[nodes.rowHeadersTable.widthArray.length - 1] += rowDiff;\n                    }\n\n                    // Set dataCellsTable cells widths according to the computed dataCellsTableMaxWidthArray\n                    reactUtils.updateTableColGroup(nodes.dataCellsTable.node, dataCellsTableMaxWidthArray);\n\n                    // Set colHeadersTable cells widths according to the computed dataCellsTableMaxWidthArray\n                    reactUtils.updateTableColGroup(nodes.colHeadersTable.node, dataCellsTableMaxWidthArray);\n\n                    // Set rowHeadersTable cells widths\n                    reactUtils.updateTableColGroup(nodes.rowHeadersTable.node, nodes.rowHeadersTable.widthArray);\n\n                    nodes.dataCellsTable.node.style.width = dataCellsTableMaxWidth + 'px';\n                    nodes.colHeadersTable.node.style.width = dataCellsTableMaxWidth + 'px';\n                    nodes.rowHeadersTable.node.style.width = rowHeadersTableWidth + 'px';\n\n                    var dataCellsContainerWidth = Math.min(\n                        dataCellsTableMaxWidth + 1,\n                        nodes.pivotContainer.size.width - rowHeadersTableWidth - nodes.verticalScrollBar.size.width);\n\n                    // Adjust data cells container width\n                    nodes.dataCellsContainer.node.style.width = dataCellsContainerWidth + 'px';\n                    nodes.colHeadersContainer.node.style.width = dataCellsContainerWidth + 'px';\n\n                    var pivotContainerHeight = this.pgridwidget.pgrid.config.height;\n\n                    if (pivotContainerHeight) {\n                        // Adjust data cells container height\n                        var dataCellsTableHeight = Math.ceil(Math.min(\n                            pivotContainerHeight -\n                            (nodes.toolbar ? nodes.toolbar.size.height + 17 : 0) -\n                            nodes.upperbuttonsRow.size.height -\n                            nodes.columnbuttonsRow.size.height -\n                            nodes.colHeadersTable.size.height -\n                            nodes.horizontalScrollBar.size.height,\n                            nodes.dataCellsTable.size.height));\n\n                        nodes.dataCellsContainer.node.style.height = dataCellsTableHeight + 'px';\n                        nodes.rowHeadersContainer.node.style.height = dataCellsTableHeight + 'px';\n                    }\n\n                    reactUtils.updateTableColGroup(\n                        pivotWrapperTable, [\n                            rowHeadersTableWidth,\n                            dataCellsContainerWidth,\n                            nodes.verticalScrollBar.size.width,\n                            Math.max(\n                                nodes.pivotContainer.size.width - (\n                                    rowHeadersTableWidth +\n                                    dataCellsContainerWidth +\n                                    nodes.verticalScrollBar.size.width),\n                                0)\n                        ]);\n\n                    this.refs.horizontalScrollBar.refresh();\n                    this.refs.verticalScrollBar.refresh();\n                },\n                render: function() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var Toolbar = comps.Toolbar;\n                    var PivotTableUpperButtons = comps.PivotTableUpperButtons;\n                    var PivotTableColumnButtons = comps.PivotTableColumnButtons;\n                    var PivotTableRowButtons = comps.PivotTableRowButtons;\n                    var PivotTableRowHeaders = comps.PivotTableRowHeaders;\n                    var PivotTableColumnHeaders = comps.PivotTableColumnHeaders;\n                    var PivotTableDataCells = comps.PivotTableDataCells;\n                    var HorizontalScrollBar = comps.HorizontalScrollBar;\n                    var VerticalScrollBar = comps.VerticalScrollBar;\n\n                    var classes = config.theme.getPivotClasses();\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return (\n                        React.createElement(\"div\", {\n                                className: classes.container,\n                                style: tblStyle,\n                                ref: \"pivotContainer\"\n                            },\n                            config.toolbar && config.toolbar.visible ? React.createElement(\"div\", {\n                                    ref: \"toolbar\",\n                                    className: \"orb-toolbar\"\n                                },\n                                React.createElement(Toolbar, {\n                                    pivotTableComp: self\n                                })\n                            ) : null,\n                            React.createElement(\"table\", {\n                                    id: 'tbl-' + self.id,\n                                    ref: \"pivotWrapperTable\",\n                                    className: classes.table,\n                                    style: {\n                                        tableLayout: 'fixed'\n                                    }\n                                },\n                                React.createElement(\"colgroup\", null,\n                                    React.createElement(\"col\", {\n                                        ref: \"column1\"\n                                    }),\n                                    React.createElement(\"col\", {\n                                        ref: \"column2\"\n                                    }),\n                                    React.createElement(\"col\", {\n                                        ref: \"column3\"\n                                    }),\n                                    React.createElement(\"col\", {\n                                        ref: \"column4\"\n                                    })\n                                ),\n                                React.createElement(\"tbody\", null,\n                                    React.createElement(\"tr\", {\n                                            className: \"pivot-table upper-buttons\",\n                                            ref: \"upperbuttonsRow\"\n                                        },\n                                        React.createElement(\"td\", {\n                                                colSpan: \"4\"\n                                            },\n                                            React.createElement(PivotTableUpperButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        )\n                                    ),\n                                    React.createElement(\"tr\", {\n                                            className: \"pivot-table column-buttons\",\n                                            ref: \"columnbuttonsRow\"\n                                        },\n                                        React.createElement(\"td\", null),\n                                        React.createElement(\"td\", {\n                                                style: {\n                                                    padding: '11px 4px !important'\n                                                }\n                                            },\n                                            React.createElement(PivotTableColumnButtons, {\n                                                pivotTableComp: self\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                            colSpan: \"2\"\n                                        })\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"pivot-table row-buttons\",\n                                                style: {\n                                                    position: 'relative'\n                                                }\n                                            },\n                                            React.createElement(PivotTableRowButtons, {\n                                                pivotTableComp: self,\n                                                ref: \"rowButtonsContainer\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"pivot-table column-headers\"\n                                            },\n                                            React.createElement(PivotTableColumnHeaders, {\n                                                pivotTableComp: self,\n                                                ref: \"colHeadersContainer\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                            colSpan: \"2\"\n                                        })\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", {\n                                                className: \"pivot-table row-headers\"\n                                            },\n                                            React.createElement(PivotTableRowHeaders, {\n                                                pivotTableComp: self,\n                                                ref: \"rowHeadersContainer\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                                className: \"pivot-table data-cells\"\n                                            },\n                                            React.createElement(\"div\", {\n                                                    className: \"inner-table-container data-cntr\",\n                                                    ref: \"dataCellsContainer\",\n                                                    onWheel: this.onWheel\n                                                },\n                                                React.createElement(PivotTableDataCells, {\n                                                    pivotTableComp: self,\n                                                    ref: \"dataCellsTable\"\n                                                })\n                                            )\n                                        ),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(VerticalScrollBar, {\n                                                pivotTableComp: self,\n                                                ref: \"verticalScrollBar\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", null)\n                                    ),\n                                    React.createElement(\"tr\", null,\n                                        React.createElement(\"td\", null),\n                                        React.createElement(\"td\", null,\n                                            React.createElement(HorizontalScrollBar, {\n                                                pivotTableComp: self,\n                                                ref: \"horizontalScrollBar\"\n                                            })\n                                        ),\n                                        React.createElement(\"td\", {\n                                            colSpan: \"2\"\n                                        })\n                                    )\n                                )\n                            ),\n                            React.createElement(\"div\", {\n                                className: \"orb-overlay orb-overlay-hidden\",\n                                id: 'drilldialog' + self.id\n                            })\n                        )\n                    );\n                }\n            });\n\n            function getAllColumnsWidth(tblObject) {\n                if (tblObject && tblObject.node) {\n\n                    var tbl = tblObject.node;\n                    var widthArray = [];\n\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n                        // current row\n                        var currRow = tbl.rows[rowIndex];\n                        // reset widthArray index\n                        var arrayIndex = 0;\n                        var currWidth = null;\n\n                        // get the width of each cell within current row\n                        for (var cellIndex = 0; cellIndex < currRow.cells.length; cellIndex++) {\n                            // current cell\n                            var currCell = currRow.cells[cellIndex];\n\n                            if (currCell.__orb._visible) {\n                                // cell width\n                                //var cellwidth = Math.ceil(reactUtils.getSize(currCell.children[0]).width/currCell.colSpan);\n                                var cellwidth = Math.ceil((currCell.__orb._textWidth / currCell.__orb._colSpan) + currCell.__orb._paddingLeft + currCell.__orb._paddingRight + currCell.__orb._borderLeftWidth + currCell.__orb._borderRightWidth);\n                                // whether current cell spans vertically to the last row\n                                var rowsSpan = currCell.__orb._rowSpan > 1 && currCell.__orb._rowSpan >= tbl.rows.length - rowIndex;\n\n                                // if current cell spans over more than one column, add its width (its) 'colSpan' number of times\n                                for (var cspan = 0; cspan < currCell.__orb._colSpan; cspan++) {\n                                    // If cell span over more than 1 row: insert its width into widthArray at arrayIndex\n                                    // Else: either expand widthArray if necessary or replace the width if its smaller than current cell width\n\n                                    currWidth = widthArray[arrayIndex];\n                                    // skip inhibited widths (width that belongs to an upper cell than spans vertically to current row)\n                                    while (currWidth && currWidth.inhibit > 0) {\n                                        currWidth.inhibit--;\n                                        arrayIndex++;\n                                        currWidth = widthArray[arrayIndex];\n                                    }\n\n                                    if (widthArray.length - 1 < arrayIndex) {\n                                        widthArray.push({\n                                            width: cellwidth\n                                        });\n                                    } else if (cellwidth > widthArray[arrayIndex].width) {\n                                        widthArray[arrayIndex].width = cellwidth;\n                                    }\n\n                                    widthArray[arrayIndex].inhibit = currCell.__orb._rowSpan - 1;\n\n                                    // increment widthArray index\n                                    arrayIndex++;\n                                }\n                            }\n                        }\n\n                        // decrement inhibited state of all widths unsed in widthArray (not reached by current row cells)\n                        currWidth = widthArray[arrayIndex];\n                        while (currWidth) {\n                            if (currWidth.inhibit > 0) {\n                                currWidth.inhibit--;\n                            }\n                            arrayIndex++;\n                            currWidth = widthArray[arrayIndex];\n                        }\n                    }\n\n                    // set widthArray to the tblObject\n                    tblObject.size.width = 0;\n                    tblObject.widthArray = widthArray.map(function(item, index) {\n                        tblObject.size.width += item.width;\n                        return item.width;\n                    });\n                }\n            }\n\n            function setTableWidths(tblObject, newWidthArray) {\n                if (tblObject && tblObject.node) {\n\n                    // reset table width\n                    (tblObject.size = (tblObject.size || {})).width = 0;\n\n                    var tbl = tblObject.node;\n\n                    // for each row, set its cells width\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n\n                        // current row\n                        var currRow = tbl.rows[rowIndex];\n                        // index in newWidthArray\n                        var arrayIndex = 0;\n                        var currWidth = null;\n\n                        // set width of each cell\n                        for (var cellIndex = 0; cellIndex < currRow.cells.length; cellIndex++) {\n\n                            // current cell\n                            var currCell = currRow.cells[cellIndex];\n                            if (currCell.__orb._visible) {\n                                // cell width\n                                var newCellWidth = 0;\n                                // whether current cell spans vertically more than 1 row\n                                var rowsSpan = currCell.__orb._rowSpan > 1 && rowIndex < tbl.rows.length - 1;\n\n                                // current cell width is the sum of (its) \"colspan\" items in newWidthArray starting at 'arrayIndex'\n                                // 'arrayIndex' should be incremented by an amount equal to current cell 'colspan' but should also skip 'inhibited' cells\n                                for (var cspan = 0; cspan < currCell.__orb._colSpan; cspan++) {\n                                    currWidth = newWidthArray[arrayIndex];\n                                    // skip inhibited widths (width that belongs to an upper cell than spans vertically to current row)\n                                    while (currWidth && currWidth.inhibit > 0) {\n                                        currWidth.inhibit--;\n                                        arrayIndex++;\n                                        currWidth = newWidthArray[arrayIndex];\n                                    }\n\n                                    if (currWidth) {\n                                        // add width of cells participating in the span\n                                        newCellWidth += currWidth.width;\n                                        // if current cell spans vertically more than 1 row, mark its width as inhibited for all cells participating in this span\n                                        if (rowsSpan) {\n                                            currWidth.inhibit = currCell.__orb._rowSpan - 1;\n                                        }\n\n                                        // advance newWidthArray index\n                                        arrayIndex++;\n                                    }\n                                }\n\n                                currCell.children[0].style.width = newCellWidth + 'px';\n\n                                // set table width (only in first iteration)\n                                if (rowIndex === 0) {\n                                    var outerCellWidth = 0;\n                                    if (currCell.__orb) {\n                                        outerCellWidth = currCell.__orb._colSpan * (Math.ceil(currCell.__orb._paddingLeft + currCell.__orb._paddingRight + currCell.__orb._borderLeftWidth + currCell.__orb._borderRightWidth));\n                                    }\n                                    tblObject.size.width += newCellWidth + outerCellWidth;\n                                }\n                            }\n                        }\n\n                        // decrement inhibited state of all widths unsed in newWidthArray (not reached by current row cells)\n                        currWidth = newWidthArray[arrayIndex];\n                        while (currWidth) {\n                            if (currWidth.inhibit > 0) {\n                                currWidth.inhibit--;\n                            }\n                            arrayIndex++;\n                            currWidth = newWidthArray[arrayIndex];\n                        }\n                    }\n                }\n            }\n\n            function clearTableWidths(tbl) {\n                if (tbl) {\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n                        var row = tbl.rows[rowIndex];\n                        for (var cellIndex = 0; cellIndex < row.cells.length; cellIndex++) {\n                            row.cells[cellIndex].children[0].style.width = '';\n                        }\n                    }\n                    tbl.style.width = '';\n                }\n            }\n\n            module.exports.PivotRow = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var leftmostCellFound = false;\n                    var layoutInfos = self.props.layoutInfos;\n                    var cells;\n\n                    var rowstyle = {};\n\n                    var istopmost = false;\n\n                    cells = this.props.row.map(function(cell, index) {\n\n                        var isleftmost = false;\n                        var className = ' pivot-cell ';\n                        if (self.props.ordering && cell.dim.field) {\n                            className += 'cell-' + (self.props.ordering.indexOf(cell.dim.field.caption.toLowerCase()) + 1) + ' '\n                        }\n\n                        // If current cells are column/data headers and left most cell is not found yet\n                        // and last row left most cell does not span vertically over the current one and current one is visible \n                        // then mark IT as the left most cell\n                        if (cell.visible() && layoutInfos) {\n                            if (cell.dim) {\n                                if ((cell.dim.isRoot && layoutInfos.topMostCells[cell.dim.depth - 1] === undefined) || (!cell.dim.isRoot && layoutInfos.topMostCells[cell.dim.depth] === undefined && (cell.dim.parent.isRoot || layoutInfos.topMostCells[cell.dim.depth + 1] === cell.dim.parent))) {\n                                    istopmost = true;\n                                    layoutInfos.topMostCells[cell.dim.depth] = cell.dim;\n                                }\n                                if (cell.dim.field) {\n                                    className += cell.dim.field.caption.toLowerCase()\n                                }\n                            } else if (!layoutInfos.topMostCells['0']) {\n                                istopmost = layoutInfos.topMostCells['0'] = true;\n                            }\n\n                            if (!leftmostCellFound && (self.props.axetype === axe.Type.DATA || self.props.axetype === axe.Type.COLUMNS) &&\n                                layoutInfos.lastLeftMostCellVSpan === 0) {\n\n                                isleftmost = leftmostCellFound = true;\n                                layoutInfos.lastLeftMostCellVSpan = cell.vspan() - 1;\n                            }\n                        }\n\n                        return React.createElement(PivotCell, {\n                            key: index,\n                            cell: cell,\n                            leftmost: isleftmost,\n                            topmost: istopmost,\n                            pivotTableComp: self.props.pivotTableComp,\n                            className: className\n                        });\n                    });\n\n                    // decrement lastLeftMostCellVSpan\n                    if (layoutInfos && layoutInfos.lastLeftMostCellVSpan > 0 && !leftmostCellFound) {\n                        layoutInfos.lastLeftMostCellVSpan--;\n                    }\n\n                    return (\n                        React.createElement(\"tr\", {\n                                style: rowstyle,\n                                className: this.props.className || 'pivot-row'\n                            },\n                            cells\n                        )\n                    );\n                }\n            });\n\n            var _paddingLeft = null;\n            var _borderLeft = null;\n\n            module.exports.PivotCell = react.createClass({\n                expand: function() {\n                    this.props.pivotTableComp.expandRow(this.props.cell);\n                },\n                collapse: function() {\n                    this.props.pivotTableComp.collapseRow(this.props.cell);\n                },\n                updateCellInfos: function() {\n                    var node = this.getDOMNode();\n                    var cell = this.props.cell;\n                    node.__orb = node.__orb || {};\n\n                    if (!cell.visible()) {\n\n                        node.__orb._visible = false;\n\n                    } else {\n                        var cellContentNode = this.refs.cellContent.getDOMNode();\n\n                        var text = node.textContent;\n                        var propList = [];\n                        var retPaddingLeft = _paddingLeft == null;\n                        var retBorderLeft = !this.props.leftmost && _borderLeft == null;\n\n                        if (retPaddingLeft) {\n                            propList.push('padding-left');\n                        }\n\n                        if (retBorderLeft) {\n                            propList.push('border-left-width');\n                        }\n\n                        if (propList.length > 0) {\n                            var nodeStyle = reactUtils.getStyle(node, propList, true);\n\n                            if (retPaddingLeft) {\n                                _paddingLeft = parseFloat(nodeStyle[0]);\n                            }\n\n                            if (retBorderLeft) {\n                                _borderLeft = parseFloat(nodeStyle[retPaddingLeft ? 1 : 0]);\n                            }\n                        }\n\n                        reactUtils.removeClass(node, 'cell-hidden');\n\n                        node.__orb._visible = true;\n                        node.__orb._textWidth = reactUtils.getSize(cellContentNode).width;\n                        node.__orb._colSpan = this.props.cell.hspan(true) || 1;\n                        node.__orb._rowSpan = this.props.cell.vspan(true) || 1;\n                        node.__orb._paddingLeft = _paddingLeft;\n                        node.__orb._paddingRight = _paddingLeft;\n                        node.__orb._borderLeftWidth = this.props.leftmost ? 0 : _borderLeft;\n                        node.__orb._borderRightWidth = 0;\n                    }\n                },\n                componentDidMount: function() {\n                    this.updateCellInfos();\n                },\n                componentDidUpdate: function() {\n                    this.updateCellInfos();\n                },\n                shouldComponentUpdate: function(nextProps, nextState) {\n                    if (nextProps.cell && nextProps.cell == this.props.cell && !this._latestVisibleState && !nextProps.cell.visible()) {\n                        return false;\n                    }\n                    return true;\n                },\n                _latestVisibleState: false,\n\n                render: function() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var cellClick;\n                    var headerPushed = false;\n\n                    this._latestVisibleState = cell.visible();\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\"table\", {\n                                        key: \"header-value\",\n                                        ref: \"cellContent\"\n                                    },\n                                    React.createElement(\"tbody\", null,\n                                        React.createElement(\"tr\", null, React.createElement(\"td\", {\n                                                className: \"orb-tgl-btn\"\n                                            }, React.createElement(\"div\", {\n                                                className: 'orb-tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                onClick: (isWrapper ? this.collapse : this.expand)\n                                            })),\n                                            React.createElement(\"td\", {\n                                                className: \"hdr-val\"\n                                            }, React.createElement(\"div\", {\n                                                dangerouslySetInnerHTML: {\n                                                    __html: cell.value || '&#160;'\n                                                }\n                                            })))\n                                    )));\n                            } else {\n                                value = (cell.value || '&#160;') + (cell.type === uiheaders.HeaderType.SUB_TOTAL ? ' Total' : '');\n                            }\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = (cell.datafield && cell.datafield.formatFunc) ?\n                                cell.datafield.formatFunc()(cell.value) :\n                                cell.value;\n                            cellClick = function() {\n                                self.props.pivotTableComp.pgridwidget.drilldown(cell, self.props.pivotTableComp.id);\n                            };\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        var headerClassName;\n                        switch (cell.template) {\n                            case 'cell-template-datavalue':\n                                headerClassName = 'cell-data';\n                                break;\n                            default:\n                                if (cell.template != 'cell-template-dataheader' && cell.type !== uiheaders.HeaderType.GRAND_TOTAL) {\n                                    headerClassName = 'hdr-val';\n                                }\n                        }\n                        divcontent.push(React.createElement(\"div\", {\n                            key: \"cell-value\",\n                            ref: \"cellContent\",\n                            className: headerClassName\n                        }, React.createElement(\"div\", {\n                            dangerouslySetInnerHTML: {\n                                __html: value || '&#160;'\n                            }\n                        })));\n                    }\n\n                    return React.createElement(\"td\", {\n                            className: getClassname(this.props),\n                            onDoubleClick: cellClick,\n                            colSpan: cell.hspan(),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\"div\", null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            function getClassname(compProps) {\n                var cell = compProps.cell;\n                var classname = cell.cssclass;\n                classname += compProps.className || '';\n                classname += cell.expanded ? ' expanded' : ' closed';\n                var isEmpty = cell.template === 'cell-template-empty';\n\n                if (!cell.visible()) {\n                    classname += ' cell-hidden';\n                }\n\n                if (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.expanded) {\n                    classname += ' header-st-exp';\n                }\n\n                if (cell.type === uiheaders.HeaderType.GRAND_TOTAL) {\n                    if (cell.dim.depth === 1) {\n                        classname += ' header-nofields';\n                    } else if (cell.dim.depth > 2) {\n                        classname += ' header-gt-exp';\n                    }\n                }\n\n                if (compProps.leftmost) {\n                    classname += ' ' + (cell.template === 'cell-template-datavalue' ? 'cell' : 'header') + '-leftmost';\n                }\n\n                if (compProps.topmost) {\n                    classname += ' cell-topmost';\n                }\n\n                return classname;\n            }\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n\n                var _currDragElement = null;\n                var _currDropTarget = null;\n                var _currDropIndicator = null;\n\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left ||\n                        elem1Rect.left > elem2Rect.right ||\n                        elem1Rect.bottom < elem2Rect.top ||\n                        elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function setCurrDropTarget(dropTarget, callback) {\n                    if (_currDropTarget) {\n                        signalDragEnd(_currDropTarget, function() {\n                            _currDropTarget = dropTarget;\n                            signalDragOver(dropTarget, callback);\n                        });\n                    } else {\n                        _currDropTarget = dropTarget;\n                        signalDragOver(dropTarget, callback);\n                    }\n                }\n\n                function setCurrDropIndicator(dropIndicator) {\n                    if (_currDropIndicator) {\n                        signalDragEnd(_currDropIndicator, function() {\n                            _currDropIndicator = dropIndicator;\n                            signalDragOver(dropIndicator);\n                        });\n                    } else {\n                        _currDropIndicator = dropIndicator;\n                        signalDragOver(dropIndicator);\n                    }\n                }\n\n                function signalDragOver(target, callback) {\n                    if (target && target.onDragOver) {\n                        target.onDragOver(callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                }\n\n                function signalDragEnd(target, callback) {\n                    if (target && target.onDragEnd) {\n                        target.onDragEnd(callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                }\n\n                function getDropTarget() {\n                    return reactUtils.forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return reactUtils.forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    setDragElement: function(elem) {\n\n                        var prevDragElement = _currDragElement;\n                        _currDragElement = elem;\n                        if (_currDragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                if (_currDropTarget) {\n                                    var position = _currDropIndicator != null ? _currDropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, _currDropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                setCurrDropTarget(null);\n                                setCurrDropIndicator(null);\n\n                            } else {\n                                _dragNode = _currDragElement.getDOMNode();\n                            }\n                        }\n                    },\n                    registerTarget: function(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function() {\n                        if (_currDragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            reactUtils.forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = target.component.getDOMNode().getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap) {\n                                        foundTarget = target;\n                                        return;\n                                    }\n                                }\n                            }, true);\n\n                            if (foundTarget) {\n                                setCurrDropTarget(foundTarget, function() {\n                                    var foundIndicator = null;\n\n                                    reactUtils.forEach(_dropIndicators, function(indicator, index) {\n                                        if (!foundIndicator) {\n                                            var elementOwnIndicator = indicator.component.props.axetype === _currDragElement.props.axetype &&\n                                                indicator.component.props.position === _currDragElement.props.position;\n\n                                            var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                            if (targetIndicator && !elementOwnIndicator) {\n                                                var tnodeRect = indicator.component.getDOMNode().getBoundingClientRect();\n                                                var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                                if (isOverlap) {\n                                                    foundIndicator = indicator;\n                                                    return;\n                                                }\n                                            }\n                                        }\n                                    });\n\n                                    if (!foundIndicator) {\n                                        var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                            return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        });\n                                        if (axeIndicators.length > 0) {\n                                            foundIndicator = axeIndicators[axeIndicators.length - 1];\n                                        }\n                                    }\n                                    setCurrDropIndicator(foundIndicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            }());\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function() {\n                    var classname = 'drp-indic';\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement(\"div\", {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function() {\n                    this.dtid = ++dtid;\n                    return {\n                        isover: false\n                    };\n                },\n                componentDidMount: function() {\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                },\n                componentWillUnmount: function() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        if (index < self.props.buttons.length - 1) {\n                            return [\n                                React.createElement(\"td\", null, React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                })),\n                                React.createElement(\"td\", null, button)\n                            ];\n                        } else {\n                            return [\n                                React.createElement(\"td\", null, React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                })),\n                                React.createElement(\"td\", null, button),\n                                React.createElement(\"td\", null, React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                }))\n                            ];\n                        }\n                    });\n\n                    var style = self.props.axetype === axe.Type.ROWS ? {\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 11\n                    } : null;\n\n                    return React.createElement(\"div\", {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '') + (buttons.length === 0 ? ' drp-trgt-empty' : ''),\n                            style: style\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    buttons\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.refs.filterButton.getDOMNode();\n                    var filterButtonPos = reactUtils.getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        pivotTableComp: this.props.pivotTableComp\n                    });\n\n                    filterContainer.className = this.props.pivotTableComp.pgrid.config.theme.getFilterClasses().container;\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                componentDidUpdate: function() {\n                    if (this.props.pivotTableComp.pgrid.config.canMoveFields) {\n                        if (!this.state.mousedown) {\n                            // mouse not down, don't care about mouse up/move events.\n                            dragManager.setDragElement(null);\n                            document.removeEventListener('mousemove', this.onMouseMove);\n                        } else if (this.state.mousedown) {\n                            // mouse down, interested by mouse up/move events.\n                            dragManager.setDragElement(this);\n                            document.addEventListener('mousemove', this.onMouseMove);\n                        }\n                    }\n                },\n                componentDidMount: function() {\n                    this.props.pivotTableComp.registerThemeChanged(this.updateClasses);\n                },\n                componentWillUnmount: function() {\n                    this.props.pivotTableComp.unregisterThemeChanged(this.updateClasses);\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                },\n                onMouseDown: function(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    if (e.ctrlKey) {\n                        this.props.pivotTableComp.toggleFieldExpansion(this.props.axetype, this.props.field);\n                    } else {\n\n                        var thispos = reactUtils.getOffset(this.getDOMNode());\n\n                        // inform mousedown, save start pos\n                        this.setState({\n                            mousedown: true,\n                            mouseoffset: {\n                                x: thispos.x - e.pageX,\n                                y: thispos.y - e.pageY,\n                            },\n                            startpos: {\n                                x: e.pageX,\n                                y: e.pageY\n                            }\n                        });\n                    }\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseUp: function(e) {\n\n                    var isdragged = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    if (!e.ctrlKey && !isdragged) {\n                        // if button was not dragged, proceed as a click\n                        this.props.pivotTableComp.sort(this.props.axetype, this.props.field);\n                    }\n                },\n                onMouseMove: function(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.props.pivotTableComp.pgrid.config.canMoveFields || !this.state.mousedown) return;\n\n                    var size = null;\n                    if (!this.state.dragging) {\n                        size = reactUtils.getSize(this.getDOMNode());\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: e.pageX + this.state.mouseoffset.x,\n                        y: e.pageY + this.state.mouseoffset.y\n                    };\n\n                    this.setState({\n                        dragging: true,\n                        size: size,\n                        pos: newpos\n                    });\n\n                    dragManager.elementMoved();\n\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                updateClasses: function() {\n                    this.getDOMNode().className = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton;\n                },\n                render: function() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : '',\n                        zIndex: 101\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortDirectionClass = self.props.field.sort.order === 'asc' ?\n                        'sort-asc' :\n                        //' \\u2191' :\n                        (self.props.field.sort.order === 'desc' ?\n                            'sort-desc' :\n                            //' \\u2193' :\n                            '');\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.pivotTableComp.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n                    var fieldAggFunc = '';\n                    if (self.props.axetype === axe.Type.DATA) {\n                        fieldAggFunc = React.createElement(\"small\", null, ' (' + self.props.field.aggregateFuncName + ')');\n                    }\n\n                    return React.createElement(\"div\", {\n                            key: self.props.field.name,\n                            className: this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton,\n                            onMouseDown: this.onMouseDown,\n                            onMouseUp: this.onMouseUp,\n                            style: divstyle\n                        },\n                        React.createElement(\"table\", null,\n                            React.createElement(\"tbody\", null,\n                                React.createElement(\"tr\", null,\n                                    React.createElement(\"td\", {\n                                        className: \"caption\"\n                                    }, self.props.field.caption, fieldAggFunc),\n                                    React.createElement(\"td\", null, React.createElement(\"div\", {\n                                        className: 'sort-indicator ' + sortDirectionClass\n                                    })),\n                                    React.createElement(\"td\", {\n                                            className: \"filter\"\n                                        },\n                                        React.createElement(\"div\", {\n                                            ref: \"filterButton\",\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableUpperButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var fieldsDropTarget;\n                    if (config.canMoveFields) {\n                        var fieldsButtons = config.availablefields().map(function(field, index) {\n                            return React.createElement(PivotButton, {\n                                key: field.name,\n                                field: field,\n                                axetype: null,\n                                position: index,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n                        fieldsDropTarget = React.createElement(\"tr\", null,\n                            React.createElement(\"td\", {\n                                    className: \"flds-grp-cap av-flds text-muted\"\n                                },\n                                React.createElement(\"div\", null, \"Fields\")\n                            ),\n                            React.createElement(\"td\", {\n                                    className: \"av-flds\"\n                                },\n                                React.createElement(DropTarget, {\n                                    buttons: fieldsButtons,\n                                    axetype: null\n                                })\n                            )\n                        );\n                    } else {\n                        fieldsDropTarget = null;\n                    }\n\n                    var dataButtons = config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    var dataDropTarget = React.createElement(\"tr\", null,\n                        React.createElement(\"td\", {\n                                className: \"flds-grp-cap text-muted\"\n                            },\n                            React.createElement(\"div\", null, \"Data\")\n                        ),\n                        React.createElement(\"td\", {\n                                className: \"empty\"\n                            },\n                            React.createElement(DropTarget, {\n                                buttons: dataButtons,\n                                axetype: axe.Type.DATA\n                            })\n                        )\n                    );\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table upper-buttons\"\n                        },\n                        React.createElement(\"tbody\", null,\n                            fieldsDropTarget,\n                            dataDropTarget\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableColumnButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var columnButtons = config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: columnButtons,\n                        axetype: axe.Type.COLUMNS\n                    });\n                }\n            });\n\n            module.exports.PivotTableRowButtons = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var rowButtons = config.rowFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.ROWS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: rowButtons,\n                        axetype: axe.Type.ROWS\n                    });\n                }\n            });\n\n            module.exports.PivotTableColumnHeaders = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var cntrClass = pgridwidget.columns.headers.length === 0 ? '' : ' columns-cntr';\n\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var columnHeaders = pgridwidget.columns.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: headerRow,\n                            axetype: axe.Type.COLUMNS,\n                            pivotTableComp: self.props.pivotTableComp,\n                            layoutInfos: layoutInfos,\n                            className: \"column-header-row\"\n                        });\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'inner-table-container' + cntrClass,\n                            ref: \"colHeadersContainer\",\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\"table\", {\n                                className: \"inner-table\"\n                            },\n                            React.createElement(\"colgroup\", null),\n                            React.createElement(\"tbody\", null,\n                                columnHeaders\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableRowHeaders = react.createClass({\n                setColGroup: function(widths) {\n                    var node = this.getDOMNode();\n                    var colGroupNode = this.refs.colgroup.getDOMNode();\n                    node.style.tableLayout = 'auto';\n\n                    colGroupNode.innerHTML = '';\n                    for (var i = 0; i < widths.length; i++) {\n                        var col = document.createElement('col');\n                        col.style.width = (widths[i] + 8) + 'px';\n                        colGroupNode.appendChild(col);\n                    }\n                    node.style.tableLayout = 'fixed';\n                },\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var cntrClass = pgridwidget.rows.headers.length === 0 ? '' : ' rows-cntr';\n\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n                    var ordering = pgridwidget.rows.headers[0].map(\n                        function(cell) {\n                            return cell.dim && cell.dim.field && cell.dim.field.caption ? cell.dim.field.caption.toLowerCase() : 'captionless'\n                        })\n\n                    var rowHeaders = pgridwidget.rows.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: headerRow,\n                            ordering: ordering,\n                            axetype: axe.Type.ROWS,\n                            layoutInfos: layoutInfos,\n                            pivotTableComp: self.props.pivotTableComp,\n                            className: \"row-header-row\"\n                        });\n                    });\n\n                    return React.createElement(\"div\", {\n                            className: 'inner-table-container' + cntrClass,\n                            ref: \"rowHeadersContainer\",\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\"table\", {\n                                className: \"inner-table\"\n                            },\n\n                            React.createElement(\"tbody\", null,\n                                rowHeaders\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableDataCells = react.createClass({\n                render: function() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var dataCells = pgridwidget.dataRows.map(function(dataRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: dataRow,\n                            axetype: axe.Type.DATA,\n                            layoutInfos: layoutInfos,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\"table\", {\n                            className: \"inner-table\"\n                        },\n                        React.createElement(\"colgroup\", null),\n                        React.createElement(\"tbody\", null,\n                            dataCells\n                        )\n                    );\n                }\n            });\n\n            var scrollBarMixin = {\n                scrollEvent: null,\n                scrollClient: null,\n                getInitialState: function() {\n                    // initial state, all zero.\n                    return {\n                        size: 16,\n                        mousedown: false,\n                        thumbOffset: 0\n                    };\n                },\n                componentDidMount: function() {\n                    this.scrollEvent = new ScrollEvent(this);\n                },\n                componentDidUpdate: function() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        document.removeEventListener('mousemove', this.onMouseMove);\n                        document.removeEventListener('mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        document.addEventListener('mousemove', this.onMouseMove);\n                        document.addEventListener('mouseup', this.onMouseUp);\n                    }\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousemove', this.onMouseMove);\n                    document.removeEventListener('mouseup', this.onMouseUp);\n                },\n                onMouseDown: function(e) {\n                    // drag with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thumbElem = this.refs.scrollThumb.getDOMNode();\n                    var thumbposInParent = reactUtils.getParentOffset(thumbElem);\n\n                    reactUtils.addClass(thumbElem, 'orb-scrollthumb-hover');\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: e[this.mousePosProp],\n                        thumbOffset: thumbposInParent[this.posProp]\n                    });\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                onMouseUp: function() {\n\n                    if (this.state.mousedown) {\n                        var thumbElem = this.refs.scrollThumb.getDOMNode();\n                        reactUtils.removeClass(thumbElem, 'orb-scrollthumb-hover');\n                    }\n\n                    this.setState({\n                        mousedown: false\n                    });\n                },\n                onMouseMove: function(e) {\n\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    e.stopPropagation();\n                    e.preventDefault();\n\n                    var amount = e[this.mousePosProp] - this.state.mouseoffset;\n                    this.state.mouseoffset = e[this.mousePosProp];\n\n                    this.scroll(amount);\n                },\n                getScrollSize: function() {\n                    if (this.scrollClient != null) {\n                        return reactUtils.getSize(this.scrollClient)[this.sizeProp];\n                    } else {\n                        return reactUtils.getSize(this.getDOMNode())[this.sizeProp];\n                    }\n                },\n                setScrollClient: function(scrollClient, scrollCallback) {\n                    this.scrollClient = scrollClient;\n                    this.scrollEvent.callback = scrollCallback;\n                },\n                getScrollPercent: function() {\n                    var maxOffset = this.getScrollSize() - this.state.size;\n                    return maxOffset <= 0 ? 0 : this.state.thumbOffset / maxOffset;\n                },\n                refresh: function() {\n                    if (this.scrollClient) {\n                        var scrolledElement = this.scrollClient.children[0];\n\n                        var clientSize = reactUtils.getSize(this.scrollClient);\n                        var elementSize = reactUtils.getSize(scrolledElement);\n\n                        var scrollBarContainerSize = this.getScrollSize();\n                        var newSize = clientSize[this.sizeProp] >= elementSize[this.sizeProp] ? 0 : (clientSize[this.sizeProp] / elementSize[this.sizeProp]) * scrollBarContainerSize;\n\n                        this.setState({\n                                containerSize: scrollBarContainerSize,\n                                size: newSize,\n                                thumbOffset: Math.min(this.state.thumbOffset, scrollBarContainerSize - newSize)\n                            },\n                            this.scrollEvent.raise\n                        );\n\n                    }\n                },\n                scroll: function(amount, mode) {\n                    if (this.state.size > 0) {\n                        if (mode == 1) amount *= 8;\n\n                        var maxOffset = this.getScrollSize() - this.state.size;\n                        var newOffset = this.state.thumbOffset + amount;\n                        if (newOffset < 0) newOffset = 0;\n                        if (newOffset > maxOffset) newOffset = maxOffset;\n\n                        this.setState({\n                                thumbOffset: newOffset\n                            },\n                            this.scrollEvent.raise\n                        );\n                        return true;\n                    }\n                    return false;\n                },\n                onWheel: function(e) {\n                    this.scroll(e.deltaY, e.deltaMode);\n                    e.stopPropagation();\n                    e.preventDefault();\n                },\n                render: function() {\n                    var self = this;\n\n                    var thumbStyle = {\n                        padding: 0\n                    };\n                    thumbStyle[this.sizeProp] = this.state.size;\n                    thumbStyle[this.offsetCssProp] = this.state.thumbOffset;\n\n                    var thisStyle = {};\n                    thisStyle[this.sizeProp] = this.state.containerSize;\n\n                    var thumbClass = \"orb-scrollthumb \" + this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().scrollBar;\n\n                    var scrollThumb = this.state.size <= 0 ?\n                        null :\n                        React.createElement(\"div\", {\n                            className: thumbClass,\n                            style: thumbStyle,\n                            ref: \"scrollThumb\",\n                            onMouseDown: this.onMouseDown\n                        });\n\n                    return React.createElement(\"div\", {\n                            className: this.cssClass,\n                            style: thisStyle,\n                            onWheel: this.onWheel\n                        },\n                        scrollThumb\n                    );\n                }\n            };\n\n            function ScrollEvent(scrollBarComp) {\n                var self = this;\n                this.scrollBarComp = scrollBarComp;\n                this.callback = null;\n                this.raise = function() {\n                    if (self.callback) {\n                        self.callback(self.scrollBarComp.getScrollPercent());\n                    }\n                };\n            }\n\n            module.exports.HorizontalScrollBar = react.createClass({\n                mixins: [scrollBarMixin],\n                posProp: 'x',\n                mousePosProp: 'pageX',\n                sizeProp: 'width',\n                offsetCssProp: 'left',\n                cssClass: 'orb-h-scrollbar'\n            });\n\n            module.exports.VerticalScrollBar = react.createClass({\n                mixins: [scrollBarMixin],\n                posProp: 'y',\n                mousePosProp: 'pageY',\n                sizeProp: 'height',\n                offsetCssProp: 'top',\n                cssClass: 'orb-v-scrollbar'\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                filterManager: null,\n                getInitialState: function() {\n                    this.pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    return {};\n                },\n                destroy: function() {\n                    var container = this.getDOMNode().parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function(operator, term, staticValue, excludeStatic) {\n                    this.props.pivotTableComp.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function(e) {\n                    var container = this.getDOMNode().parentNode;\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function(e) {\n                    var valuesTable = this.refs.valuesTable.getDOMNode();\n                    var target = e.target;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                e.stopPropagation();\n                                e.preventDefault();\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function() {\n                    document.addEventListener('mousedown', this.onMouseDown);\n                    document.addEventListener('wheel', this.onMouseWheel);\n                    window.addEventListener('resize', this.destroy);\n                },\n                componentDidMount: function() {\n                    this.filterManager.init(this.getDOMNode());\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('mousedown', this.onMouseDown);\n                    document.removeEventListener('wheel', this.onMouseWheel);\n                    window.removeEventListener('resize', this.destroy);\n                },\n                render: function() {\n                    var Dropdown = comps.Dropdown;\n                    var checkboxes = [];\n\n                    this.filterManager = new FilterManager(this, this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\"tr\", {\n                                key: value\n                            },\n                            React.createElement(\"td\", {\n                                    className: \"fltr-chkbox\"\n                                },\n                                React.createElement(\"input\", {\n                                    type: \"checkbox\",\n                                    value: value,\n                                    defaultChecked: \"checked\"\n                                })\n                            ),\n                            React.createElement(\"td\", {\n                                className: \"fltr-val\",\n                                title: text || value\n                            }, text || value)\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n                    if (this.values.containsBlank) {\n                        addCheckboxRow(filtering.BLANK, '(Blank)');\n                    }\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        addCheckboxRow(this.values[i]);\n                    }\n\n                    var buttonClass = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().orbButton;\n                    var pivotStyle = window.getComputedStyle(this.props.pivotTableComp.getDOMNode(), null);\n                    var style = {\n                        fontFamily: pivotStyle.getPropertyValue('font-family'),\n                        fontSize: pivotStyle.getPropertyValue('font-size')\n                    };\n\n                    var currentFilter = this.pgridwidget.pgrid.getFieldFilter(this.props.field);\n\n                    return React.createElement(\"table\", {\n                            className: \"fltr-scntnr\",\n                            style: style\n                        },\n                        React.createElement(\"tbody\", null,\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        className: \"srchop-col\"\n                                    },\n                                    React.createElement(Dropdown, {\n                                        values: [\n                                            filtering.Operators.MATCH.name,\n                                            filtering.Operators.NOTMATCH.name,\n                                            filtering.Operators.EQ.name,\n                                            filtering.Operators.NEQ.name,\n                                            filtering.Operators.GT.name,\n                                            filtering.Operators.GTE.name,\n                                            filtering.Operators.LT.name,\n                                            filtering.Operators.LTE.name\n                                        ],\n                                        selectedValue: currentFilter && currentFilter.operator ? currentFilter.operator.name : filtering.Operators.MATCH.name,\n                                        onValueChanged: this.filterManager.onOperatorChanged\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                    className: \"srchtyp-col\",\n                                    title: \"Enable/disable Regular expressions\"\n                                }, \".*\"),\n                                React.createElement(\"td\", {\n                                        className: \"srchbox-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            style: {\n                                                width: '100%'\n                                            }\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            React.createElement(\"tr\", null,\n                                                React.createElement(\"td\", null, React.createElement(\"input\", {\n                                                    type: \"text\",\n                                                    placeholder: \"search\"\n                                                })),\n                                                React.createElement(\"td\", null, React.createElement(\"div\", {\n                                                    className: \"srchclear-btn\",\n                                                    onClick: this.clearFilter\n                                                }, \"x\"))\n                                            )\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", null,\n                                React.createElement(\"td\", {\n                                        colSpan: \"3\",\n                                        className: \"fltr-vals-col\"\n                                    },\n                                    React.createElement(\"table\", {\n                                            className: \"fltr-vals-tbl\",\n                                            ref: \"valuesTable\"\n                                        },\n                                        React.createElement(\"tbody\", null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\"tr\", {\n                                    className: \"bottom-row\"\n                                },\n                                React.createElement(\"td\", {\n                                        className: \"cnfrm-btn-col\",\n                                        colSpan: \"2\"\n                                    },\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Ok\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement(\"input\", {\n                                        type: \"button\",\n                                        className: buttonClass,\n                                        value: \"Cancel\",\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\"td\", {\n                                        className: \"resize-col\"\n                                    },\n                                    React.createElement(\"div\", null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    clearSearchButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var resizeManager;\n\n                this.init = function(filterContainerElement) {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0].rows[0].cells[0].children[0];\n                    elems.clearSearchButton = elems.filterContainer.rows[0].cells[2].children[0].rows[0].cells[1].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                this.onOperatorChanged = function(newOperator) {\n                    if (operator.name !== newOperator) {\n                        operator = filtering.Operators.get(newOperator);\n                        self.toggleRegexpButtonVisibility();\n                        self.searchChanged('operatorChanged');\n                    }\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    elems.filterContainer.addEventListener('click', self.valueChecked);\n                    elems.searchBox.addEventListener('keyup', self.searchChanged);\n\n                    elems.clearSearchButton.addEventListener('click', self.clearSearchBox);\n\n                    elems.okButton.addEventListener('click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    elems.cancelButton.addEventListener('click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (e.button !== 0) return;\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && e.pageX < resizeGripSize.left ? 0 : e.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && e.pageY < resizeGripSize.top ? 0 : e.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = e.pageX;\n                        mousedownpos.y = e.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.style.height = (valuesTableSize.bottom - valuesTableSize.top + offset.y) + 'px';\n                        }\n\n                        e.stopPropagation();\n                        e.preventDefault();\n                    };\n\n                    resizeGripElem.addEventListener('mousedown', this.resizeMouseDown);\n                    document.addEventListener('mouseup', this.resizeMouseUp);\n                    document.addEventListener('mousemove', this.resizeMouseMove);\n                }\n\n                this.clearSearchBox = function() {\n                    elems.searchBox.value = '';\n                    self.searchChanged();\n                };\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        elems.enableRegexButton.addEventListener('click', self.regexpActiveChanged);\n                        reactUtils.removeClass(elems.enableRegexButton, 'srchtyp-col-hidden');\n\n                    } else {\n                        elems.enableRegexButton.removeEventListener('click', self.regexpActiveChanged);\n                        reactUtils.addClass(elems.enableRegexButton, 'srchtyp-col-hidden');\n                    }\n                };\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        reactUtils.addClass(elems.enableRegexButton, 'srchtyp-col-active');\n                    } else {\n                        reactUtils.removeClass(elems.enableRegexButton, 'srchtyp-col-active');\n                    }\n                };\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? (isRegexMode ? term : utils.escapeRegex(term)) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                };\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || (e === 'regexModeChanged' && search) || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i,\n                            val,\n                            checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = elems.checkboxes[val];\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        var excludeUnchecked = false;\n\n                        if (checkedCount === 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            excludeUnchecked = checkedCount > (valuesCount / 2 + 1);\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = elems.checkboxes[val];\n                                if (checkboxVisible(checkbox)) {\n                                    if ((!excludeUnchecked && checkbox.checked) || (excludeUnchecked && !checkbox.checked)) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ?\n                        null :\n                        (values == null || values === filtering.ALL ?\n                            true :\n                            (values === filtering.NONE ?\n                                false :\n                                !!values\n                            )\n                        );\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = elems.checkboxes[val];\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var checkbox = elems.checkboxes[reactComp.values[i]];\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n            }\n\n            module.exports.Dropdown = react.createClass({\n                openOrClose: function(e) {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    var valuesListNode = this.refs.valuesList.getDOMNode();\n                    if (e.target === valueNode && valuesListNode.style.display === 'none') {\n                        valuesListNode.style.display = 'block';\n                    } else {\n                        valuesListNode.style.display = 'none';\n                    }\n                },\n                onMouseEnter: function() {\n                    var valueNode = this.refs.valueElement.getDOMNode();\n                    valueNode.className = \"orb-tgl-btn-down\";\n                    valueNode.style.backgroundPosition = 'right center';\n                },\n                onMouseLeave: function() {\n                    this.refs.valueElement.getDOMNode().className = \"\";\n                },\n                componentDidMount: function() {\n                    document.addEventListener('click', this.openOrClose);\n                },\n                componentWillUnmount: function() {\n                    document.removeEventListener('click', this.openOrClose);\n                },\n                selectValue: function(e) {\n                    var listNode = this.refs.valuesList.getDOMNode();\n                    var target = e.target;\n                    var isli = false;\n                    while (!isli && target != null) {\n                        if (target.parentNode == listNode) {\n                            isli = true;\n                            break;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    if (isli) {\n                        var value = target.textContent;\n                        var valueElement = this.refs.valueElement.getDOMNode();\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (this.props.onValueChanged) {\n                                this.props.onValueChanged(value);\n                            }\n                        }\n                    }\n                },\n                render: function() {\n                    function createSelectValueFunc(value) {\n                        return function() {\n                            this.selectValue(value);\n                        };\n                    }\n\n                    var values = [];\n                    for (var i = 0; i < this.props.values.length; i++) {\n                        values.push(React.createElement(\"li\", {\n                            key: 'item' + i,\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.values[i]\n                            }\n                        }));\n                    }\n\n                    return React.createElement(\"div\", {\n                            className: \"orb-select\"\n                        },\n                        React.createElement(\"div\", {\n                            ref: \"valueElement\",\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.selectedValue\n                            },\n                            onMouseEnter: this.onMouseEnter,\n                            onMouseLeave: this.onMouseLeave\n                        }),\n                        React.createElement(\"ul\", {\n                                ref: \"valuesList\",\n                                style: {\n                                    display: 'none'\n                                },\n                                onClick: this.selectValue\n                            },\n                            values\n                        )\n                    );\n                }\n            });\n\n            module.exports.Grid = react.createClass({\n                render: function() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClasses = this.props.theme.getGridClasses();\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\"th\", {\n                                key: 'h' + h\n                            }, headers[h]));\n                        }\n                        rows.push(React.createElement(\"tr\", {\n                            key: 'h'\n                        }, headerRow));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            if (utils.isArray(data[i])) {\n                                for (var j = 0; j < data[i].length; j++) {\n                                    row.push(React.createElement(\"td\", {\n                                        key: i + '' + j\n                                    }, data[i][j]));\n                                }\n                            } else {\n                                for (var prop in data[i]) {\n                                    if (data[i].hasOwnProperty(prop)) {\n                                        row.push(React.createElement(\"td\", {\n                                            key: i + '' + prop\n                                        }, data[i][prop]));\n                                    }\n                                }\n                            }\n                            rows.push(React.createElement(\"tr\", {\n                                key: i\n                            }, row));\n                        }\n                    }\n\n                    return React.createElement(\"table\", {\n                            className: tableClasses.table\n                        },\n                        React.createElement(\"tbody\", null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function(props) {\n                                React.render(dialogFactory(props), overlay);\n                            }\n                        };\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function(visible) {\n                    this.overlayElement.className = this.props.theme.getDialogClasses(visible).overlay;\n                },\n                componentDidMount: function() {\n                    this.overlayElement = this.getDOMNode().parentNode;\n                    this.setOverlayClass(true);\n                    this.overlayElement.addEventListener('click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = (dHeight - 45) + 'px';\n                },\n                close: function(e) {\n                    if (e.target == this.overlayElement || e.target.className === 'button-close') {\n                        this.overlayElement.removeEventListener('click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function() {\n                    if (this.props.comp) {\n                        var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                        var classes = this.props.theme.getDialogClasses();\n\n                        return React.createElement(\"div\", {\n                                className: classes.dialog,\n                                style: this.props.style || {}\n                            },\n                            React.createElement(\"div\", {\n                                    className: classes.content\n                                },\n                                React.createElement(\"div\", {\n                                    className: classes.header\n                                }, React.createElement(\"div\", {\n                                    className: \"button-close\",\n                                    onClick: this.close\n                                }), React.createElement(\"div\", {\n                                    className: classes.title\n                                }, this.props.title)),\n                                React.createElement(\"div\", {\n                                        className: classes.body\n                                    },\n                                    comp\n                                )\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.Toolbar = react.createClass({\n                _toInit: [],\n                componentDidMount: function() {\n                    for (var i = 0; i < this._toInit.length; i++) {\n                        var btn = this._toInit[i];\n                        btn.init(this.props.pivotTableComp, this.refs[btn.ref].getDOMNode());\n                    }\n                },\n                componentDidUpdate: function() {\n                    for (var i = 0; i < this._toInit.length; i++) {\n                        var btn = this._toInit[i];\n                        btn.init(this.props.pivotTableComp, this.refs[btn.ref].getDOMNode());\n                    }\n                },\n                createCallback: function(action) {\n                    if (action != null) {\n                        var pgridComponent = this.props.pivotTableComp;\n                        return function(e) {\n                            action(pgridComponent, e.target);\n                        };\n                    }\n                    return null;\n                },\n                render: function() {\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    if (config.toolbar && config.toolbar.visible) {\n\n                        var configButtons = config.toolbar.buttons ?\n                            defaultToolbarConfig.buttons.concat(config.toolbar.buttons) :\n                            defaultToolbarConfig.buttons;\n\n                        var buttons = [];\n                        for (var i = 0; i < configButtons.length; i++) {\n                            var btnConfig = configButtons[i];\n                            var refName = 'btn' + i;\n\n                            if (btnConfig.type == 'separator') {\n                                buttons.push(React.createElement(\"div\", {\n                                    key: i,\n                                    className: \"orb-tlbr-sep\"\n                                }));\n                            } else if (btnConfig.type == 'label') {\n                                buttons.push(React.createElement(\"div\", {\n                                    key: i,\n                                    className: \"orb-tlbr-lbl\"\n                                }, btnConfig.text));\n                            } else {\n                                buttons.push(React.createElement(\"div\", {\n                                    key: i,\n                                    className: 'orb-tlbr-btn ' + btnConfig.cssClass,\n                                    title: btnConfig.tooltip,\n                                    ref: refName,\n                                    onClick: this.createCallback(btnConfig.action)\n                                }));\n                            }\n                            if (btnConfig.init) {\n                                this._toInit.push({\n                                    ref: refName,\n                                    init: btnConfig.init\n                                });\n                            }\n                        }\n\n                        return React.createElement(\"div\", null,\n                            buttons\n                        );\n                    }\n\n                    return React.createElement(\"div\", null);\n                }\n            });\n\n            var excelExport = _dereq_('../orb.export.excel');\n\n            var defaultToolbarConfig = {\n                exportToExcel: function(pgridComponent, button) {\n                    var a = document.createElement('a');\n                    a.download = \"orbpivotgrid.xls\";\n                    a.href = excelExport(pgridComponent.props.pgridwidget);\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                },\n                expandAllRows: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.ROWS, null, true);\n                },\n                collapseAllRows: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.ROWS, null, false);\n                },\n                expandAllColumns: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.COLUMNS, null, true);\n                },\n                collapseAllColumns: function(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.COLUMNS, null, false);\n                },\n                updateSubtotalsButton: function(axetype, pgridComponent, button) {\n                    var subTotalsState = pgridComponent.pgridwidget.areSubtotalsVisible(axetype);\n                    button.style.display = subTotalsState === null ? 'none' : '';\n\n                    var classToAdd = '';\n                    var classToRemove = '';\n                    if (subTotalsState) {\n                        classToAdd = 'subtotals-visible';\n                        classToRemove = 'subtotals-hidden';\n                    } else {\n                        classToAdd = 'subtotals-hidden';\n                        classToRemove = 'subtotals-visible';\n                    }\n\n                    reactUtils.removeClass(button, classToRemove);\n                    reactUtils.addClass(button, classToAdd);\n                },\n                initSubtotals: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        self.updateSubtotalsButton(axetype, pgridComponent, button);\n                    };\n                },\n                toggleSubtotals: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        pgridComponent.toggleSubtotals(axetype);\n                        self.updateSubtotalsButton(axetype, pgridComponent, button);\n                    };\n                },\n                updateGrandtotalButton: function(axetype, pgridComponent, button) {\n                    var subTotalsState = pgridComponent.pgridwidget.isGrandtotalVisible(axetype);\n                    button.style.display = subTotalsState === null ? 'none' : '';\n\n                    var classToAdd = '';\n                    var classToRemove = '';\n                    if (subTotalsState) {\n                        classToAdd = 'grndtotal-visible';\n                        classToRemove = 'grndtotal-hidden';\n                    } else {\n                        classToAdd = 'grndtotal-hidden';\n                        classToRemove = 'grndtotal-visible';\n                    }\n\n                    reactUtils.removeClass(button, classToRemove);\n                    reactUtils.addClass(button, classToAdd);\n                },\n                initGrandtotal: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        self.updateGrandtotalButton(axetype, pgridComponent, button);\n                    };\n                },\n                toggleGrandtotal: function(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        pgridComponent.toggleGrandtotal(axetype);\n                        self.updateGrandtotalButton(axetype, pgridComponent, button);\n                    };\n                }\n            };\n\n            defaultToolbarConfig.buttons = [{\n                type: 'label',\n                text: 'Rows:'\n            }, {\n                type: 'button',\n                tooltip: 'Expand all rows',\n                cssClass: 'expand-all',\n                action: defaultToolbarConfig.expandAllRows\n            }, {\n                type: 'button',\n                tooltip: 'Collapse all rows',\n                cssClass: 'collapse-all',\n                action: defaultToolbarConfig.collapseAllRows\n            }, {\n                type: 'button',\n                tooltip: 'Toggle rows sub totals',\n                init: defaultToolbarConfig.initSubtotals(axe.Type.ROWS),\n                action: defaultToolbarConfig.toggleSubtotals(axe.Type.ROWS)\n            }, {\n                type: 'button',\n                tooltip: 'Toggle rows grand total',\n                init: defaultToolbarConfig.initGrandtotal(axe.Type.ROWS),\n                action: defaultToolbarConfig.toggleGrandtotal(axe.Type.ROWS)\n            }, {\n                type: 'separator'\n            }, {\n                type: 'label',\n                text: 'Columns:'\n            }, {\n                type: 'button',\n                tooltip: 'Expand all columns',\n                cssClass: 'expand-all',\n                action: defaultToolbarConfig.expandAllColumns\n            }, {\n                type: 'button',\n                tooltip: 'Collapse all columns',\n                cssClass: 'collapse-all',\n                action: defaultToolbarConfig.collapseAllColumns\n            }, {\n                type: 'button',\n                tooltip: 'Toggle columns sub totals',\n                init: defaultToolbarConfig.initSubtotals(axe.Type.COLUMNS),\n                action: defaultToolbarConfig.toggleSubtotals(axe.Type.COLUMNS)\n            }, {\n                type: 'button',\n                tooltip: 'Toggle columns grand total',\n                init: defaultToolbarConfig.initGrandtotal(axe.Type.COLUMNS),\n                action: defaultToolbarConfig.toggleGrandtotal(axe.Type.COLUMNS)\n            }, {\n                type: 'separator'\n            }, {\n                type: 'label',\n                text: 'Export:'\n            }, {\n                type: 'button',\n                tooltip: 'Export to Excel',\n                cssClass: 'export-xls',\n                action: defaultToolbarConfig.exportToExcel\n            }, ];\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.export.excel\": 6,\n            \"../orb.filtering\": 7,\n            \"../orb.ui.header\": 14,\n            \"../orb.utils\": 17,\n            \"./orb.react.utils\": 19,\n            \"react\": undefined\n        }],\n        19: [function(_dereq_, module, exports) {\n\n            module.exports.forEach = function(list, func, defStop) {\n                var ret;\n                if (list) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            };\n\n            module.exports.removeClass = function(element, classname) {\n                if (element && classname) {\n                    while (element.className.indexOf(classname) >= 0) {\n                        element.className = element.className.replace(classname, '');\n                    }\n                }\n            };\n\n            module.exports.addClass = function(element, classname) {\n                if (element && classname) {\n                    if (element.className.indexOf(classname) < 0) {\n                        element.className += ' ' + classname;\n                    }\n                }\n            };\n\n            module.exports.getOffset = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left,\n                        y: rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            };\n\n            module.exports.getParentOffset = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    var rectParent = element.parentNode != null ? element.parentNode.getBoundingClientRect() : {\n                        top: 0,\n                        left: 0\n                    };\n                    return {\n                        x: rect.left - rectParent.left,\n                        y: rect.top - rectParent.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            };\n\n            module.exports.getSize = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    width: 0,\n                    height: 0\n                };\n            };\n\n            module.exports.getStyle = function(element, styleProps, keepString) {\n                var values = [];\n                if (element && styleProps) {\n                    var currStyle, f;\n                    if (element.currentStyle) {\n                        currStyle = element.currentStyle;\n                        f = function(prop) {\n                            return currStyle[prop];\n                        };\n                    } else if (window && window.getComputedStyle) {\n                        currStyle = window.getComputedStyle(element, null);\n                        f = function(prop) {\n                            return currStyle.getPropertyValue(prop);\n                        };\n                    }\n\n                    for (var i = 0; i < styleProps.length; i++) {\n                        var val = f(styleProps[i]);\n                        values.push(val && keepString !== true ? Math.ceil(parseFloat(val)) : val);\n                    }\n                }\n                return values;\n            };\n\n            module.exports.isVisible = function(element) {\n                if (element) {\n                    return element.style.display !== 'none' && (element.offsetWidth !== 0 || element.offsetHeight !== 0);\n                }\n                return false;\n            };\n\n            module.exports.updateTableColGroup = function(tableNode, widths) {\n                if (tableNode) {\n                    var colGroupNode = tableNode.firstChild;\n                    if (colGroupNode && colGroupNode.nodeName === 'COLGROUP') {\n                        tableNode.style.tableLayout = 'auto';\n                        tableNode.style.width = '';\n\n                        colGroupNode.innerHTML = '';\n                        for (var i = 0; i < widths.length; i++) {\n                            var col = document.createElement('col');\n                            col.style.width = widths[i] + 'px';\n                            colGroupNode.appendChild(col);\n                        }\n                        tableNode.style.tableLayout = 'fixed';\n                    }\n                }\n            };\n        }, {}]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}